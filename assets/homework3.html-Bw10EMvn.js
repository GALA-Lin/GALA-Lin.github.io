import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as n,a as s,o as a}from"./app-BNsIsNk6.js";const i={},p={class:"katex-block"},r={class:"katex-display"},m={class:"katex"},c={class:"katex-html","aria-hidden":"true"},d={class:"base"},g={class:"minner"},o={class:"mopen"},h={class:"delimsizing mult"},y={class:"vlist-t vlist-t2"},u={class:"vlist-r"},v={class:"vlist",style:{height:"2.05em"}},x={style:{top:"-2.492em"}},b={style:{height:"0.016em",width:"0.8889em"}},j={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.016em",style:{width:"0.8889em"},viewBox:"0 0 888.89 16",preserveAspectRatio:"xMinYMin"},f={style:{top:"-4.292em"}},A={style:{height:"0.016em",width:"0.8889em"}},w={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.016em",style:{width:"0.8889em"},viewBox:"0 0 888.89 16",preserveAspectRatio:"xMinYMin"},k={class:"mclose"},z={class:"delimsizing mult"},C={class:"vlist-t vlist-t2"},L={class:"vlist-r"},_={class:"vlist",style:{height:"2.05em"}},M={style:{top:"-2.492em"}},H={style:{height:"0.016em",width:"0.8889em"}},S={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.016em",style:{width:"0.8889em"},viewBox:"0 0 888.89 16",preserveAspectRatio:"xMinYMin"},D={style:{top:"-4.292em"}},G={style:{height:"0.016em",width:"0.8889em"}},B={xmlns:"http://www.w3.org/2000/svg",width:"0.8889em",height:"0.016em",style:{width:"0.8889em"},viewBox:"0 0 888.89 16",preserveAspectRatio:"xMinYMin"};function F(N,t){return a(),e("div",null,[t[22]||(t[22]=n(`<h1 id="homework3" tabindex="-1"><a class="header-anchor" href="#homework3"><span>Homework3</span></a></h1><h1 id="第一题" tabindex="-1"><a class="header-anchor" href="#第一题"><span>第一题</span></a></h1><p>在构建 c 数组时，不再维护额外的 b 数组来记录方向。 在需要回溯寻找具体的最长公共子序列时，直接通过比较 c[i] [j]、c[i-1] [j] 和 c[i] [j-1] 的值来判断当前字符是否属于最长公共子序列，以及应该向哪个方向回溯。</p><h2 id="伪代码" tabindex="-1"><a class="header-anchor" href="#伪代码"><span>伪代码</span></a></h2><div class="language-plain line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="plain" style="--vp-collapsed-lines:15;"><pre><code class="language-plain"><span class="line">FUNCTION LCS(const string s1, const string s2):</span>
<span class="line">    m = s1.size() // 获取字符串 s1 的长度</span>
<span class="line">    n = s2.size() // 获取字符串 s2 的长度</span>
<span class="line">    dp[m+1][n+1] // 初始化动态规划表</span>
<span class="line">    for i from 1 to m:</span>
<span class="line">        for j from 1 to n: </span>
<span class="line">            if s1[i-1] == s2[j-1]: // 如果当前字符相同</span>
<span class="line">                dp[i][j] = dp[i-1][j-1] + 1 // 当前位置的 LCS 长度等于左上方的值加 1，表示找到了一个公共子序列字符</span>
<span class="line">            else:</span>
<span class="line">                dp[i][j] = max(dp[i-1][j], dp[i][j-1])                 // 如果当前字符不同，当前位置的 LCS 长度取上方和左方的最大值，表示不考虑当前字符</span>
<span class="line">        end for</span>
<span class="line">    end for</span>
<span class="line"></span>
<span class="line">    return dp[m][n] // 返回最终的最长公共子序列长度，位于动态规划表的右下角</span>
<span class="line">END FUNCTION</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h1 id="第二题" tabindex="-1"><a class="header-anchor" href="#第二题"><span>第二题</span></a></h1><p>为了计算矩阵连乘积</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><msub><mi>A</mi><mn>2</mn></msub><msub><mi>A</mi><mn>3</mn></msub><msub><mi>A</mi><mn>4</mn></msub><msub><mi>A</mi><mn>5</mn></msub><msub><mi>A</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">A_1A_2A_3A_4A_5A_6 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>的最小乘法次数，我们使用动态规划方法构造两个表格 (m[i,j]) 和 (s[i,j])。其中 (m[i,j]) 表示从矩阵</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mtext>到</mtext><msub><mi>A</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">A_i到A_j </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">到</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>相乘的最小乘法次数，而 (s[i,j]) 记录了最优分割点。</p><h2 id="详细计算过程" tabindex="-1"><a class="header-anchor" href="#详细计算过程"><span>详细计算过程</span></a></h2>`,12)),t[23]||(t[23]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mi",null,"j")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("msub",null,[s("mrow",null,[s("mi",null,"min"),s("mo",null,"⁡")]),s("mrow",null,[s("mi",null,"i"),s("mo",null,"≤"),s("mi",null,"k"),s("mo",null,"<"),s("mi",null,"j")])]),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mi",null,"m"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"k"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mi",null,"m"),s("mo",{stretchy:"false"},"["),s("mi",null,"k"),s("mo",null,"+"),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("msub",null,[s("mi",null,"p"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1")])]),s("msub",null,[s("mi",null,"p"),s("mi",null,"k")]),s("msub",null,[s("mi",null,"p"),s("mi",null,"j")]),s("mo",{fence:"true"},"}")])])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"i"),s("mo",null,"<"),s("mi",null,"j")])])])])])])]),s("annotation",{encoding:"application/x-tex"},"m[i, j]=\\left\\{\\begin{array}{cc} 0 & i=j \\\\ \\min _{i \\leq k<j}\\left\\{m[i, k]+m[k+1, j]+p_{i-1} p_{k} p_{j}\\right\\} & i<j \\end{array}\\right. ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.4em","vertical-align":"-0.95em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size3"},"{")]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mop"},[s("span",{class:"mop"},"min"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"≤"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mrel mtight"},"<"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"j")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"{"),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"p"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2083em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"p"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"p"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05724em"}},"j")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},"}")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")])]),s("span",{style:{top:"-2.41em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05724em"}},"j")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}})])]),s("span",{class:"mclose nulldelimiter"})])])])])])],-1)),t[24]||(t[24]=n('<ol><li><p><strong>链长 l=2</strong>：</p><ul><li>m[1,2]=30×35×15=15750</li><li>m[2,3]=35×15×5=2625</li><li>m[3,4]=15×5×10=750</li><li>m[4,5]=5×10×20=1000</li><li>m[5,6]=10×20×25=5000</li></ul></li><li><p><strong>链长 l=3</strong>：</p><ol><li><strong>计算 m[1,3]</strong></li></ol><p>子链 A1A2A3，维度为 30×35、35×15、15×5。<br> 可能的 k值：k=1 或 k=2。</p><ul><li><p><strong>当 k=1</strong>：<br> 分割为 (A1)(A2A3)<br> 计算式：</p><p>m[1,1]+m[2,3]+30×35×5=0+2625+5250=7875</p></li><li><p><strong>当 k=2</strong>：<br> 分割为 (A1A2)(A3)<br> 计算式：</p><p>m[1,2]+m[3,3]+30×15×5=15750+0+2250=18000</p></li></ul><p><strong>最小值</strong>：min⁡(7875,18000)=7875，分割点 s[1,3]=1。</p><ol start="2"><li><strong>计算 m[2,4]</strong></li></ol><p>子链 A2A3A4，维度为 35×15、15×5、5×10。<br> 可能的 k值：k=2 或 k=3。</p><ul><li><p><strong>当 k=2</strong>：<br> 分割为 (A2)(A3A4)<br> 计算式：</p><p>m[2,2]+m[3,4]+35×15×10=0+750+5250=6000</p></li><li><p><strong>当 k=3</strong>：<br> 分割为 (A2A3)(A4)<br> 计算式：</p><p>m[2,3]+m[4,4]+35×5×10=2625+0+1750=4375</p></li></ul><p><strong>最小值</strong>：min⁡(6000,4375)=4375，分割点 s[2,4]=3。</p><ol start="3"><li><strong>计算 m[3,5]</strong></li></ol><p>子链 A3A4A5，维度为 15×515×5、5×105×10、10×2010×20。<br> 可能的 k 值：k=3 或 k=4。</p><ul><li><p><strong>当 k=3</strong>：<br> 分割为 (A3)(A4A5)<br> 计算式：</p><p>m[3,3]+m[4,5]+15×5×20=0+1000+1500=2500</p></li><li><p><strong>当 k=4</strong>：<br> 分割为 (A3A4)(A5)<br> 计算式：</p><p>m[3,4]+m[5,5]+15×10×20=750+0+3000=3750</p></li></ul><p><strong>最小值</strong>：min⁡(2500,3750)=2500，分割点 s[3,5]=3。</p><ol start="4"><li><strong>计算 m[4,6]</strong></li></ol><p>子链 A4A5A6，维度为 5×10、10×20、20×25。<br> 可能的 k 值：k=4或 k=5。</p><ul><li><p><strong>当 k=4</strong>：<br> 分割为 (A4)(A5A6)<br> 计算式：</p><p>m[4,4]+m[5,6]+5×10×25=0+5000+1250=6250</p></li><li><p><strong>当 k=5</strong>：<br> 分割为 (A4A5)(A6)<br> 计算式：</p><p>m[4,5]+m[6,6]+5×20×25=1000+0+2500=3500</p></li></ul><p><strong>最小值</strong>：min⁡(6250,3500)=3500，分割点 s[4,6]=5。</p><ul><li>m[1,3]=min(7875,18000)=7875（s[1,3] =1）</li><li>m[2,4]=min(6000,4375)=4375 （s[2,4]=3）</li><li>m[3,5]=min(2500,3750)=2500 （s[3,5]=3）</li><li>m[4,6]=min(6250,3500)=3500 （s[4,6]=5）</li></ul><table><thead><tr><th style="text-align:left;">子问题</th><th style="text-align:left;">计算过程（所有可能的 k值）</th><th style="text-align:left;">最小值</th><th style="text-align:center;">分割点 s[i,j]</th></tr></thead><tbody><tr><td style="text-align:left;">m[1,3]</td><td style="text-align:left;">k=1:7875<br>k=2:18000</td><td style="text-align:left;">7875</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:left;">m[2,4]</td><td style="text-align:left;">k=2:6000<br>k=3:4375</td><td style="text-align:left;">4375</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:left;">m[3,5]</td><td style="text-align:left;">k=3:2500<br>k=4:3750</td><td style="text-align:left;">2500</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:left;">m[4,6]</td><td style="text-align:left;">k=4:6250<br>k=5:3500</td><td style="text-align:left;">3500</td><td style="text-align:center;">5</td></tr></tbody></table><p><strong>同理可以计算其他数值:</strong></p></li><li><p><strong>链长 l=4</strong>：</p><ul><li>m[1,4]=min⁡(14875,21000,9375)=9375（s[1,4]=3）</li><li>m[2,5]=min⁡(13000,7125,11375)=7125（s[2,5]=3）</li><li>m[3,6]=min⁡(5375,9500,10000)=5375 （s[3,6]=3）</li></ul></li><li><p><strong>链长 l=5</strong>：</p><ul><li>m[1,5]=min⁡(28125,27250,11875,15375)=11875（s[1,5]=3）</li><li>m[2,6]=min⁡(18500,10500,18125,24625)=10500（s[2,6]=3）</li></ul></li><li><p><strong>链长 l=6</strong>：</p><ul><li>m[1,6]=min⁡(36750,32375,15125,21875,26875)=15125（s[1,6]=3）</li></ul></li></ol><h3 id="最终结果" tabindex="-1"><a class="header-anchor" href="#最终结果"><span>最终结果</span></a></h3><p>最小乘法次数为 <strong>15125</strong>，最优括号化方案为：(A1A2A3)(A4A5A6)</p><h3 id="m-i-j-表-最小乘法次数" tabindex="-1"><a class="header-anchor" href="#m-i-j-表-最小乘法次数"><span>m[i,j] 表（最小乘法次数）</span></a></h3><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">15750</td><td style="text-align:center;">7875</td><td style="text-align:center;">9375</td><td style="text-align:center;">11875</td><td style="text-align:center;">15125</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">-</td><td style="text-align:center;">0</td><td style="text-align:center;">2625</td><td style="text-align:center;">4375</td><td style="text-align:center;">7125</td><td style="text-align:center;">10500</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">0</td><td style="text-align:center;">750</td><td style="text-align:center;">2500</td><td style="text-align:center;">5375</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">0</td><td style="text-align:center;">1000</td><td style="text-align:center;">3500</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">0</td><td style="text-align:center;">5000</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">0</td></tr></tbody></table><h3 id="s-i-j-表-分割点" tabindex="-1"><a class="header-anchor" href="#s-i-j-表-分割点"><span>s[i,j] 表（分割点）</span></a></h3><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">-</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">2</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">4</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">5</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td><td style="text-align:center;">-</td></tr></tbody></table><h1 id="第三题" tabindex="-1"><a class="header-anchor" href="#第三题"><span>第三题</span></a></h1>',8)),t[25]||(t[25]=s("p",{"B,C,A,D,G,F":""},"X {A,C,A,B,D,F}和Y",-1)),t[26]||(t[26]=n(`<p>cpp实现c数组矩阵输出</p><div class="language-c++ line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="c++" style="--vp-collapsed-lines:15;"><pre><code class="language-c++"><span class="line">#include &lt;vector&gt;</span>
<span class="line">#include &lt;iostream&gt;</span>
<span class="line"></span>
<span class="line">using namespace std;</span>
<span class="line"></span>
<span class="line">void printDPMatrix(const vector&lt;vector&lt;int&gt;&gt;&amp; dp, int m, int n) {</span>
<span class="line">    for (int i = 0; i &lt;= m; i++) {</span>
<span class="line">        for (int j = 0; j &lt;= n; j++) {</span>
<span class="line">            cout &lt;&lt; dp[i][j] &lt;&lt; &quot; &quot;;</span>
<span class="line">        }</span>
<span class="line">        cout &lt;&lt; endl;</span>
<span class="line">    }</span>
<span class="line">    cout &lt;&lt; endl;</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">int LCS(const string&amp; s1, const string&amp; s2) {</span>
<span class="line">    int m = s1.size();</span>
<span class="line">    int n = s2.size();</span>
<span class="line">    vector&lt;vector&lt;int&gt;&gt; dp(m + 1, vector&lt;int&gt;(n + 1, 0));</span>
<span class="line"></span>
<span class="line">    for (int i = 1; i &lt;= m; i++) {  // 遍历s1中的每个字符</span>
<span class="line">        for (int j = 1; j &lt;= n; j++) {  // 遍历s2中的每个字符</span>
<span class="line">            if (s1[i-1] == s2[j-1]) {  // 如果当前字符相同</span>
<span class="line">                dp[i][j] = dp[i-1][j-1] + 1;  // LCS长度加1</span>
<span class="line">            } else {</span>
<span class="line">                // 如果当前字符不同，选择不包括当前字符的最长LCS</span>
<span class="line">                dp[i][j] = max(dp[i-1][j], dp[i][j-1]);</span>
<span class="line">            }</span>
<span class="line">        }</span>
<span class="line">    }</span>
<span class="line">    printDPMatrix(dp, m, n);</span>
<span class="line">    return dp[m][n];</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">int main() {</span>
<span class="line">    string s1, s2;</span>
<span class="line">    cin &gt;&gt; s1 &gt;&gt; s2;</span>
<span class="line">    cout &lt;&lt; &quot;Length of LCS: &quot;&lt;&lt;&quot;\\n&quot; &lt;&lt; LCS(s1, s2) &lt;&lt; endl;</span>
<span class="line">    return 0;</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="c数组-长度表" tabindex="-1"><a class="header-anchor" href="#c数组-长度表"><span>c数组（长度表）</span></a></h2>`,3)),s("p",p,[s("span",r,[s("span",m,[t[21]||(t[21]=s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"C"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"{"),s("mtable",{rowspacing:"0.16em",columnalign:"center center",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"0"),s("mtext",null," 或者 "),s("mi",null,"j"),s("mo",null,"="),s("mn",null,"0")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"C"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",null,"+"),s("mn",null,"1")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",null,"="),s("msub",null,[s("mi",null,"y"),s("mi",null,"j")])])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("mi",null,"max"),s("mo",null,"⁡"),s("mo",{stretchy:"false"},"("),s("mi",null,"C"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",{stretchy:"false"},"]"),s("mo",{separator:"true"},","),s("mi",null,"C"),s("mo",{stretchy:"false"},"["),s("mi",null,"i"),s("mo",{separator:"true"},","),s("mi",null,"j"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mrow",null,[s("msub",null,[s("mi",null,"x"),s("mi",null,"i")]),s("mo",{stretchy:"false"},"!"),s("mo",null,"="),s("msub",null,[s("mi",null,"y"),s("mi",null,"j")])])])])])]),s("mo",{fence:"true"},"}")])]),s("annotation",{encoding:"application/x-tex"},"C[i, j]=\\left\\{\\begin{array}{cc} 0 & i=0 \\text { 或者 } j=0 \\\\ C[i-1, j-1]+1 & x_i=y_j \\\\ \\max (C[i-1, j], C[i, j-1]) & x_i!=y_j \\end{array}\\right\\} ")])])],-1)),s("span",c,[t[20]||(t[20]=n('<span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span>',1)),s("span",d,[t[19]||(t[19]=s("span",{class:"strut",style:{height:"3.6em","vertical-align":"-1.55em"}},null,-1)),s("span",g,[s("span",o,[s("span",h,[s("span",y,[s("span",u,[s("span",v,[t[4]||(t[4]=s("span",{style:{top:"-2.5em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎩")])],-1)),s("span",x,[t[1]||(t[1]=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1)),s("span",b,[(a(),e("svg",j,t[0]||(t[0]=[s("path",{d:"M384 0 H504 V16 H384z M384 0 H504 V16 H384z"},null,-1)])))])]),t[5]||(t[5]=s("span",{style:{top:"-3.15em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎨")])],-1)),s("span",f,[t[3]||(t[3]=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1)),s("span",A,[(a(),e("svg",w,t[2]||(t[2]=[s("path",{d:"M384 0 H504 V16 H384z M384 0 H504 V16 H384z"},null,-1)])))])]),t[6]||(t[6]=s("span",{style:{top:"-4.3em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎧")])],-1))]),t[7]||(t[7]=s("span",{class:"vlist-s"},"​",-1))]),t[8]||(t[8]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])],-1))])])]),t[18]||(t[18]=n('<span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">])</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mord text"><span class="mord"> </span><span class="mord cjk_fallback">或者</span><span class="mord"> </span></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span>',1)),s("span",k,[s("span",z,[s("span",C,[s("span",L,[s("span",_,[t[13]||(t[13]=s("span",{style:{top:"-2.5em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎭")])],-1)),s("span",M,[t[10]||(t[10]=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1)),s("span",H,[(a(),e("svg",S,t[9]||(t[9]=[s("path",{d:"M384 0 H504 V16 H384z M384 0 H504 V16 H384z"},null,-1)])))])]),t[14]||(t[14]=s("span",{style:{top:"-3.15em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎬")])],-1)),s("span",D,[t[12]||(t[12]=s("span",{class:"pstrut",style:{height:"3.15em"}},null,-1)),s("span",G,[(a(),e("svg",B,t[11]||(t[11]=[s("path",{d:"M384 0 H504 V16 H384z M384 0 H504 V16 H384z"},null,-1)])))])]),t[15]||(t[15]=s("span",{style:{top:"-4.3em"}},[s("span",{class:"pstrut",style:{height:"3.15em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎫")])],-1))]),t[16]||(t[16]=s("span",{class:"vlist-s"},"​",-1))]),t[17]||(t[17]=s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.55em"}},[s("span")])],-1))])])])])])])])])]),t[27]||(t[27]=n('<table><thead><tr><th style="text-align:center;">j\\i</th><th style="text-align:center;">0</th><th style="text-align:center;">1.A</th><th style="text-align:center;">2.C</th><th style="text-align:center;">3.A</th><th style="text-align:center;">4.B</th><th style="text-align:center;">5.D</th><th style="text-align:center;">6.F</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>0</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;"><strong>1.B</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;"><strong>2.C</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td></tr><tr><td style="text-align:center;"><strong>3.A</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;"><strong>4.D</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td><td style="text-align:center;">2</td></tr><tr><td style="text-align:center;"><strong>5.G</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td></tr><tr><td style="text-align:center;"><strong>6.F</strong></td><td style="text-align:center;">0</td><td style="text-align:center;">1</td><td style="text-align:center;">1</td><td style="text-align:center;">2</td><td style="text-align:center;">3</td><td style="text-align:center;">3</td><td style="text-align:center;">4</td></tr></tbody></table><h2 id="b数组-方向表" tabindex="-1"><a class="header-anchor" href="#b数组-方向表"><span>b数组（方向表）</span></a></h2><p>结合c数组，按照标准的算法步骤，当元素不同时，比较c[i-1,j]和c[i,j-1]，如果上方的值大于等于左方，则方向向上，否则向左。</p><p>c[i,j]的值可以通过上述的公式得出</p><p>​ 1.xi=yj，用↖</p><p>​ 2.xi != yj时，如果C[i-1,j]&gt;=C[i,j]，用↑，否则用←。</p><p>​ 3.当i=1，j=1时，因为x1!=y1，所以C[1,1]=max(C[i-1,j]，C[i,j-1])=0；因为C[i-1,j]&gt;=C[i,j]，用↑。</p><table><thead><tr><th style="text-align:center;">j\\i</th><th style="text-align:center;">0</th><th style="text-align:center;">1.A</th><th style="text-align:center;">2.C</th><th style="text-align:center;">3.A</th><th style="text-align:center;">4.B</th><th style="text-align:center;">5.D</th><th style="text-align:center;">6.F</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>0</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">—</td><td style="text-align:center;">—</td><td style="text-align:center;">—</td><td style="text-align:center;">—</td><td style="text-align:center;">—</td><td style="text-align:center;">—</td></tr><tr><td style="text-align:center;"><strong>1.B</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">⬆️1</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖️</td><td style="text-align:center;">⬅️</td><td style="text-align:center;">⬅️</td><td style="text-align:center;">⬅️</td></tr><tr><td style="text-align:center;"><strong>2.C</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖️1</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td></tr><tr><td style="text-align:center;"><strong>3.A</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖️1</td><td style="text-align:center;">⬅️1</td><td style="text-align:center;">⬅️</td><td style="text-align:center;">⬅️</td></tr><tr><td style="text-align:center;"><strong>4.D</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">↖️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖1</td><td style="text-align:center;">⬆️</td></tr><tr><td style="text-align:center;"><strong>5.G</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖️</td><td style="text-align:center;">⬆️1</td><td style="text-align:center;">⬅️</td></tr><tr><td style="text-align:center;"><strong>6.F</strong></td><td style="text-align:center;">—</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">⬆️</td><td style="text-align:center;">↖️1</td></tr></tbody></table><h2 id="lcs结果" tabindex="-1"><a class="header-anchor" href="#lcs结果"><span>LCS结果</span></a></h2><ul><li><strong>起点</strong>：从右下角<code>b[6][6]</code>（↖）开始，匹配F，加入LCS，移动至<code>i=5, j=5</code>。</li><li><strong>i=5, j=5</strong>：方向⬆️，左移至<code>j=4</code>，此时<code>b[5][4]</code>为↖，匹配D，加入LCS，移动至<code>i=4, j=3</code>。</li><li><strong>i=4, j=3</strong>：方向⬅️，上移至<code>i=3</code>，此时<code>b[3][3]</code>为↖，匹配A，加入LCS，移动至<code>i=2, j=2</code>。</li><li><strong>i=2, j=2</strong>：方向↖，匹配C，加入LCS，移动至<code>i=1, j=1</code>。</li><li><strong>i=1, j=1</strong>：方向⬆️，回溯结束。</li></ul><p><strong>收集的LCS（逆序）</strong>：F → D → A → C → <strong>反转后</strong> → C A D F，长度为4。</p>',11))])}const V=l(i,[["render",F]]),U=JSON.parse('{"path":"/Algorithm%20Design%20_%20Analysis%20Course%20Guide/homework3.html","title":"Homework3","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2025-05-07T00:00:00.000Z","cover":"https://free.picui.cn/free/2025/06/15/684eb82931fbc.jpg","footer":"<a href=https://www.gnu.org/licenses/gpl-3.0.html style=\\"color:#808080\\"> GPL-3.0 Licensed </a> | Copyright © 2025-present <a href=\\"https://github.com/GALA-Lin\\" style=\\"color:#808080\\">GALA-Lin</a>","copyright":false,"star":true,"category":["Algo Course Guide"],"tag":["动态规划","最长公共子序列","矩阵连乘"],"description":"Homework3 第一题 在构建 c 数组时，不再维护额外的 b 数组来记录方向。 在需要回溯寻找具体的最长公共子序列时，直接通过比较 c[i] [j]、c[i-1] [j] 和 c[i] [j-1] 的值来判断当前字符是否属于最长公共子序列，以及应该向哪个方向回溯。 伪代码 第二题 为了计算矩阵连乘积 A1​A2​A3​A4​A5​A6​ 的最小乘...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Homework3\\",\\"image\\":[\\"https://free.picui.cn/free/2025/06/15/684eb82931fbc.jpg\\"],\\"datePublished\\":\\"2025-05-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-07-20T13:16:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GALA-Lin\\",\\"url\\":\\"https://gala-lin.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://gala-lin.github.io/Algorithm%20Design%20_%20Analysis%20Course%20Guide/homework3.html"}],["meta",{"property":"og:site_name","content":"22lin04"}],["meta",{"property":"og:title","content":"Homework3"}],["meta",{"property":"og:description","content":"Homework3 第一题 在构建 c 数组时，不再维护额外的 b 数组来记录方向。 在需要回溯寻找具体的最长公共子序列时，直接通过比较 c[i] [j]、c[i-1] [j] 和 c[i] [j-1] 的值来判断当前字符是否属于最长公共子序列，以及应该向哪个方向回溯。 伪代码 第二题 为了计算矩阵连乘积 A1​A2​A3​A4​A5​A6​ 的最小乘..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://free.picui.cn/free/2025/06/15/684eb82931fbc.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-07-20T13:16:13.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://free.picui.cn/free/2025/06/15/684eb82931fbc.jpg"}],["meta",{"name":"twitter:image:alt","content":"Homework3"}],["meta",{"property":"article:tag","content":"矩阵连乘"}],["meta",{"property":"article:tag","content":"最长公共子序列"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:published_time","content":"2025-05-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-20T13:16:13.000Z"}]]},"git":{"createdTime":1749942657000,"updatedTime":1753017373000,"contributors":[{"name":"Linsen HU","username":"","email":"1563883475@qq.com","commits":6},{"name":"GALA-Lin","username":"GALA-Lin","email":"140772868+GALA-Lin@users.noreply.github.com","commits":1,"url":"https://github.com/GALA-Lin"}]},"readingTime":{"minutes":5.94,"words":1783},"filePathRelative":"Algorithm Design & Analysis Course Guide/homework3.md","excerpt":"\\n<h1>第一题</h1>\\n<p>在构建 c 数组时，不再维护额外的 b 数组来记录方向。 在需要回溯寻找具体的最长公共子序列时，直接通过比较 c[i] [j]、c[i-1] [j] 和 c[i] [j-1] 的值来判断当前字符是否属于最长公共子序列，以及应该向哪个方向回溯。</p>\\n<h2>伪代码</h2>\\n<div class=\\"language-plain line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"prismjs\\" data-ext=\\"plain\\" style=\\"--vp-collapsed-lines:15;\\"><pre><code class=\\"language-plain\\"><span class=\\"line\\">FUNCTION LCS(const string s1, const string s2):</span>\\n<span class=\\"line\\">    m = s1.size() // 获取字符串 s1 的长度</span>\\n<span class=\\"line\\">    n = s2.size() // 获取字符串 s2 的长度</span>\\n<span class=\\"line\\">    dp[m+1][n+1] // 初始化动态规划表</span>\\n<span class=\\"line\\">    for i from 1 to m:</span>\\n<span class=\\"line\\">        for j from 1 to n: </span>\\n<span class=\\"line\\">            if s1[i-1] == s2[j-1]: // 如果当前字符相同</span>\\n<span class=\\"line\\">                dp[i][j] = dp[i-1][j-1] + 1 // 当前位置的 LCS 长度等于左上方的值加 1，表示找到了一个公共子序列字符</span>\\n<span class=\\"line\\">            else:</span>\\n<span class=\\"line\\">                dp[i][j] = max(dp[i-1][j], dp[i][j-1])                 // 如果当前字符不同，当前位置的 LCS 长度取上方和左方的最大值，表示不考虑当前字符</span>\\n<span class=\\"line\\">        end for</span>\\n<span class=\\"line\\">    end for</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">    return dp[m][n] // 返回最终的最长公共子序列长度，位于动态规划表的右下角</span>\\n<span class=\\"line\\">END FUNCTION</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div>","autoDesc":true}');export{V as comp,U as data};
