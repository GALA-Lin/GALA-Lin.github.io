import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,e as a,o as n}from"./app-CqFg8cUi.js";const i={};function l(r,e){return n(),t("div",null,e[0]||(e[0]=[a(`<h1 id="🔐-auth-模块完整介绍" tabindex="-1"><a class="header-anchor" href="#🔐-auth-模块完整介绍"><span>🔐 Auth 模块完整介绍</span></a></h1><h2 id="_1️⃣-核心组件说明" tabindex="-1"><a class="header-anchor" href="#_1️⃣-核心组件说明"><span>1️⃣ <strong>核心组件说明</strong></span></a></h2><h3 id="a-entity-layer-实体层" tabindex="-1"><a class="header-anchor" href="#a-entity-layer-实体层"><span><strong>A. Entity Layer (实体层)</strong></span></a></h3><p>我们创建的实体类：</p><ul><li><strong>User</strong> - 用户基本信息</li><li><strong>Role</strong> - 角色定义</li><li><strong>Permission</strong> - 权限定义</li><li><strong>UserRole</strong> - 用户角色关联表</li></ul><h3 id="b-mapper-layer-数据访问层" tabindex="-1"><a class="header-anchor" href="#b-mapper-layer-数据访问层"><span><strong>B. Mapper Layer (数据访问层)</strong></span></a></h3><ul><li><p>UserMapper</p><p>- 用户数据操作</p><ul><li><code>existsByUsername()</code> - 检查用户名是否存在</li><li><code>selectUserWithAuthorities()</code> - 查询用户及其权限</li><li><code>selectPermissionsByUserId()</code> - 获取用户权限列表</li><li><code>selectRolesByUserId()</code> - 获取用户角色列表</li></ul></li></ul><h3 id="c-security-layer-安全层-⭐-核心部分" tabindex="-1"><a class="header-anchor" href="#c-security-layer-安全层-⭐-核心部分"><span><strong>C. Security Layer (安全层)</strong> ⭐ 核心部分</span></a></h3><h4 id="jwt-工具-jwtutil" tabindex="-1"><a class="header-anchor" href="#jwt-工具-jwtutil"><span><strong>JWT 工具 (<code>JwtUtil</code>)</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token operator">-</span> <span class="token function">generateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 生成JWT令牌</span></span>
<span class="line"><span class="token operator">-</span> <span class="token function">validateToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 验证令牌有效性</span></span>
<span class="line"><span class="token operator">-</span> <span class="token function">extractUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 从令牌提取用户名</span></span>
<span class="line"><span class="token operator">-</span> <span class="token function">isTokenExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 检查令牌是否过期</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="spring-security-配置-securityconfig" tabindex="-1"><a class="header-anchor" href="#spring-security-配置-securityconfig"><span><strong>Spring Security 配置 (<code>SecurityConfig</code>)</strong></span></a></h4><ul><li>✅ <strong>BCrypt 密码加密器</strong> - 安全存储密码</li><li>✅ <strong>无状态会话管理</strong> - 使用JWT，不依赖session</li><li>✅ <strong>自定义认证提供者</strong> - 连接UserDetailsService</li><li>✅ <strong>公开/受保护端点配置</strong></li></ul><h4 id="jwt-过滤器-jwtauthenticationfilter" tabindex="-1"><a class="header-anchor" href="#jwt-过滤器-jwtauthenticationfilter"><span><strong>JWT 过滤器 (<code>JwtAuthenticationFilter</code>)</strong></span></a></h4><ul><li>拦截每个请求</li><li>从 <code>Authorization</code> header 提取JWT</li><li>验证令牌并设置 SecurityContext</li><li>使后续请求可以获取当前用户信息</li></ul><h4 id="异常处理器" tabindex="-1"><a class="header-anchor" href="#异常处理器"><span><strong>异常处理器</strong></span></a></h4><ul><li><code>JwtAuthenticationEntryPoint</code> - 处理未认证访问 (401)</li><li><code>JwtAccessDeniedHandler</code> - 处理权限不足 (403)</li></ul><h4 id="自定义-userdetails-securityuser" tabindex="-1"><a class="header-anchor" href="#自定义-userdetails-securityuser"><span><strong>自定义 UserDetails (<code>SecurityUser</code>)</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token operator">-</span> 存储用户<span class="token constant">ID</span>、用户名、权限列表</span>
<span class="line"><span class="token operator">-</span> 实现 <span class="token class-name">Spring</span> <span class="token class-name">Security</span> 的 <span class="token class-name">UserDetails</span> 接口</span>
<span class="line"><span class="token operator">-</span> 包含额外信息：email<span class="token punctuation">,</span> nickname<span class="token punctuation">,</span> avatarUrl</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2️⃣-service-layer-服务层" tabindex="-1"><a class="header-anchor" href="#_2️⃣-service-layer-服务层"><span>2️⃣ <strong>Service Layer (服务层)</strong></span></a></h2><h3 id="authservice-认证服务" tabindex="-1"><a class="header-anchor" href="#authservice-认证服务"><span><strong>AuthService - 认证服务</strong></span></a></h3><h4 id="登录流程-login" tabindex="-1"><a class="header-anchor" href="#登录流程-login"><span><strong>登录流程 (<code>login</code>)</strong></span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">1. 检查登录尝试次数（防暴力破解）</span>
<span class="line">   ↓</span>
<span class="line">2. 调用 AuthenticationManager 验证用户名密码</span>
<span class="line">   ↓</span>
<span class="line">3. 验证成功 → 生成JWT令牌</span>
<span class="line">   ↓</span>
<span class="line">4. 更新最后登录时间</span>
<span class="line">   ↓</span>
<span class="line">5. 返回令牌和用户信息</span>
<span class="line">   ↓</span>
<span class="line">6. 重置登录尝试计数</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>安全特性：</strong></p><ul><li>✅ 登录失败5次自动锁定30分钟</li><li>✅ 使用Redis存储尝试次数</li><li>✅ 密码验证由Spring Security自动完成</li></ul><h4 id="注册流程-register" tabindex="-1"><a class="header-anchor" href="#注册流程-register"><span><strong>注册流程 (<code>register</code>)</strong></span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">1. 检查用户名/邮箱是否已存在</span>
<span class="line">   ↓</span>
<span class="line">2. 使用BCrypt加密密码</span>
<span class="line">   ↓</span>
<span class="line">3. 创建用户记录</span>
<span class="line">   ↓</span>
<span class="line">4. 分配默认角色 (ROLE_READER)</span>
<span class="line">   ↓</span>
<span class="line">5. 返回成功消息</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="登出流程-logout" tabindex="-1"><a class="header-anchor" href="#登出流程-logout"><span><strong>登出流程 (<code>logout</code>)</strong></span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">1. 将JWT令牌加入黑名单（存入Redis）</span>
<span class="line">   ↓</span>
<span class="line">2. 设置过期时间 = 令牌剩余有效期</span>
<span class="line">   ↓</span>
<span class="line">3. 后续请求会检查黑名单</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="userservice-用户服务" tabindex="-1"><a class="header-anchor" href="#userservice-用户服务"><span><strong>UserService - 用户服务</strong></span></a></h3><ul><li><strong>获取用户资料</strong> - 支持Redis缓存</li><li><strong>更新个人信息</strong> - 昵称、头像、简介</li><li><strong>修改密码</strong> - 验证旧密码，加密新密码</li><li><strong>检查用户名可用性</strong></li></ul><hr><h2 id="_3️⃣-controller-layer-控制器层" tabindex="-1"><a class="header-anchor" href="#_3️⃣-controller-layer-控制器层"><span>3️⃣ <strong>Controller Layer (控制器层)</strong></span></a></h2><h3 id="authcontroller-认证接口" tabindex="-1"><a class="header-anchor" href="#authcontroller-认证接口"><span><strong>AuthController - 认证接口</strong></span></a></h3><table><thead><tr><th>接口</th><th>方法</th><th>路径</th><th>说明</th><th>认证</th></tr></thead><tbody><tr><td>登录</td><td>POST</td><td><code>/auth/login</code></td><td>用户登录</td><td>❌ 公开</td></tr><tr><td>注册</td><td>POST</td><td><code>/auth/register</code></td><td>用户注册</td><td>❌ 公开</td></tr><tr><td>登出</td><td>POST</td><td><code>/auth/logout</code></td><td>用户登出</td><td>✅ 需要</td></tr><tr><td>获取个人资料</td><td>GET</td><td><code>/auth/profile</code></td><td>当前用户信息</td><td>✅ 需要</td></tr><tr><td>更新个人资料</td><td>PUT</td><td><code>/auth/profile</code></td><td>更新信息</td><td>✅ 需要</td></tr><tr><td>修改密码</td><td>PUT</td><td><code>/auth/password</code></td><td>修改密码</td><td>✅ 需要</td></tr><tr><td>检查用户名</td><td>GET</td><td><code>/auth/check-username</code></td><td>可用性检查</td><td>❌ 公开</td></tr></tbody></table><h3 id="usercontroller-用户管理接口" tabindex="-1"><a class="header-anchor" href="#usercontroller-用户管理接口"><span><strong>UserController - 用户管理接口</strong></span></a></h3><table><thead><tr><th>接口</th><th>方法</th><th>路径</th><th>说明</th><th>认证</th></tr></thead><tbody><tr><td>查看用户资料</td><td>GET</td><td><code>/users/{userId}</code></td><td>公开用户信息</td><td>✅ 需要</td></tr><tr><td>管理员查看详情</td><td>GET</td><td><code>/users/admin/{userId}</code></td><td>详细信息</td><td>✅ ADMIN</td></tr></tbody></table><h3 id="testcontroller-测试接口" tabindex="-1"><a class="header-anchor" href="#testcontroller-测试接口"><span><strong>TestController - 测试接口</strong></span></a></h3><p>测试不同权限级别的访问控制：</p><ul><li><code>/test/public</code> - 完全公开</li><li><code>/test/protected</code> - 需要登录</li><li><code>/test/admin</code> - 仅管理员</li><li><code>/test/author</code> - 作者/编辑/管理员</li><li><code>/test/create-post</code> - 需要 <code>post:create</code> 权限</li></ul><hr><h2 id="_4️⃣-安全特性总结" tabindex="-1"><a class="header-anchor" href="#_4️⃣-安全特性总结"><span>4️⃣ <strong>安全特性总结</strong></span></a></h2><h3 id="✅-已实现的安全功能" tabindex="-1"><a class="header-anchor" href="#✅-已实现的安全功能"><span>✅ <strong>已实现的安全功能：</strong></span></a></h3><ol><li><strong>密码安全</strong><ul><li>BCrypt 加密（强度10）</li><li>每次加密结果不同（自动加盐）</li><li>不可逆加密</li></ul></li><li><strong>JWT 令牌</strong><ul><li>无状态认证（不依赖session）</li><li>7天有效期（可配置）</li><li>HS256 签名算法</li></ul></li><li><strong>防暴力破解</strong><ul><li>登录失败5次锁定账户</li><li>锁定时间30分钟</li><li>使用Redis存储状态</li></ul></li><li><strong>令牌黑名单</strong><ul><li>登出后令牌失效</li><li>Redis存储黑名单</li><li>自动过期清理</li></ul></li><li><strong>RBAC 权限控制</strong><ul><li>基于角色的访问控制</li><li>基于权限的细粒度控制</li><li>使用注解 <code>@PreAuthorize</code></li></ul></li><li><strong>输入验证</strong><ul><li>Jakarta Validation 验证</li><li>密码强度检查（大小写+数字）</li><li>用户名格式限制</li></ul></li></ol><hr><h2 id="📝-总结" tabindex="-1"><a class="header-anchor" href="#📝-总结"><span>📝 <strong>总结</strong></span></a></h2><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 完整的用户注册/登录/登出功能</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> JWT 令牌认证（无状态）</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> BCrypt 密码加密</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 防暴力破解（登录限制）</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> RBAC 权限控制</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> Redis 缓存优化</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> Swagger API 文档</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 注册输入验证</label></li></ul>`,47)]))}const o=s(i,[["render",l]]),p=JSON.parse('{"path":"/zh/project/Auth%20%E6%A8%A1%E5%9D%97%E5%AE%8C%E6%95%B4%E4%BB%8B%E7%BB%8D.html","title":"🔐 Auth 模块完整介绍","lang":"zh-CN","frontmatter":{"description":"🔐 Auth 模块完整介绍 1️⃣ 核心组件说明 A. Entity Layer (实体层) 我们创建的实体类： User - 用户基本信息 Role - 角色定义 Permission - 权限定义 UserRole - 用户角色关联表 B. Mapper Layer (数据访问层) UserMapper - 用户数据操作 existsByUser...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🔐 Auth 模块完整介绍\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-08T06:43:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GALA-Lin\\",\\"url\\":\\"https://gala-lin.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://gala-lin.github.io/zh/project/Auth%20%E6%A8%A1%E5%9D%97%E5%AE%8C%E6%95%B4%E4%BB%8B%E7%BB%8D.html"}],["meta",{"property":"og:site_name","content":"22lin04"}],["meta",{"property":"og:title","content":"🔐 Auth 模块完整介绍"}],["meta",{"property":"og:description","content":"🔐 Auth 模块完整介绍 1️⃣ 核心组件说明 A. Entity Layer (实体层) 我们创建的实体类： User - 用户基本信息 Role - 角色定义 Permission - 权限定义 UserRole - 用户角色关联表 B. Mapper Layer (数据访问层) UserMapper - 用户数据操作 existsByUser..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-08T06:43:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-08T06:43:07.000Z"}]]},"git":{"createdTime":1759905787000,"updatedTime":1759905787000,"contributors":[{"name":"Linsen HU","username":"","email":"1563883475@qq.com","commits":1}]},"readingTime":{"minutes":3.4,"words":1020},"filePathRelative":"zh/project/Auth 模块完整介绍.md","excerpt":"\\n<h2>1️⃣ <strong>核心组件说明</strong></h2>\\n<h3><strong>A. Entity Layer (实体层)</strong></h3>\\n<p>我们创建的实体类：</p>\\n<ul>\\n<li><strong>User</strong> - 用户基本信息</li>\\n<li><strong>Role</strong> - 角色定义</li>\\n<li><strong>Permission</strong> - 权限定义</li>\\n<li><strong>UserRole</strong> - 用户角色关联表</li>\\n</ul>\\n<h3><strong>B. Mapper Layer (数据访问层)</strong></h3>","autoDesc":true}');export{o as comp,p as data};
