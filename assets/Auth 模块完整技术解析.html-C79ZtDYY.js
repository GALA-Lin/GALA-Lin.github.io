import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as p}from"./app-CqFg8cUi.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<p>好的！让我为你详细介绍我们已经完成的 <strong>Auth 模块</strong>的技术架构和实现原理：</p><hr><h1 id="🔐-auth-模块完整技术解析" tabindex="-1"><a class="header-anchor" href="#🔐-auth-模块完整技术解析"><span>🔐 Auth 模块完整技术解析</span></a></h1><h2 id="📚-目录" tabindex="-1"><a class="header-anchor" href="#📚-目录"><span>📚 目录</span></a></h2><ol><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#1-%E6%A8%A1%E5%9D%97%E6%9E%B6%E6%9E%84%E6%80%BB%E8%A7%88" target="_blank" rel="noopener noreferrer">模块架构总览</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#2-spring-security-%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6" target="_blank" rel="noopener noreferrer">Spring Security 核心机制</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#3-jwt-%E8%AE%A4%E8%AF%81%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">JWT 认证流程</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#4-mybatis-plus-%E6%95%B0%E6%8D%AE%E5%B1%82" target="_blank" rel="noopener noreferrer">MyBatis-Plus 数据层</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#5-%E6%9C%8D%E5%8A%A1%E5%B1%82%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91" target="_blank" rel="noopener noreferrer">服务层业务逻辑</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#6-%E5%AE%89%E5%85%A8%E7%89%B9%E6%80%A7%E8%AF%A6%E8%A7%A3" target="_blank" rel="noopener noreferrer">安全特性详解</a></li><li><a href="https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#7-%E5%AE%8C%E6%95%B4%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B" target="_blank" rel="noopener noreferrer">完整请求流程</a></li></ol><hr><h2 id="_1-模块架构总览" tabindex="-1"><a class="header-anchor" href="#_1-模块架构总览"><span>1. 模块架构总览</span></a></h2><h3 id="📦-分层架构" tabindex="-1"><a class="header-anchor" href="#📦-分层架构"><span>📦 <strong>分层架构</strong></span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" style="--vp-collapsed-lines:15;"><pre><code class="language-text"><span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│  Controller Layer (控制层)           │  ← REST API 接口</span>
<span class="line">├─────────────────────────────────────┤</span>
<span class="line">│  Service Layer (业务层)              │  ← 业务逻辑处理</span>
<span class="line">├─────────────────────────────────────┤</span>
<span class="line">│  Mapper Layer (数据访问层)           │  ← 数据库操作</span>
<span class="line">├─────────────────────────────────────┤</span>
<span class="line">│  Entity Layer (实体层)               │  ← 数据模型</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line"></span>
<span class="line">           ↕ (贯穿各层)</span>
<span class="line"></span>
<span class="line">┌─────────────────────────────────────┐</span>
<span class="line">│  Security Layer (安全层)             │</span>
<span class="line">│  - JWT Filter                       │</span>
<span class="line">│  - Authentication Provider          │</span>
<span class="line">│  - UserDetailsService              │</span>
<span class="line">└─────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="🗂️-文件组织结构" tabindex="-1"><a class="header-anchor" href="#🗂️-文件组织结构"><span>🗂️ <strong>文件组织结构</strong></span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" style="--vp-collapsed-lines:15;"><pre><code class="language-text"><span class="line">module/auth/</span>
<span class="line">├── controller/</span>
<span class="line">│   ├── AuthController.java          # 认证接口（登录/注册）</span>
<span class="line">│   └── UserController.java          # 用户管理接口</span>
<span class="line">├── service/</span>
<span class="line">│   ├── AuthService.java             # 认证服务接口</span>
<span class="line">│   ├── AuthServiceImpl.java         # 认证服务实现</span>
<span class="line">│   ├── UserService.java             # 用户服务接口</span>
<span class="line">│   ├── UserServiceImpl.java         # 用户服务实现</span>
<span class="line">│   └── UserDetailsServiceImpl.java  # Spring Security 用户加载</span>
<span class="line">├── mapper/</span>
<span class="line">│   ├── UserMapper.java              # 用户数据访问</span>
<span class="line">│   ├── RoleMapper.java              # 角色数据访问</span>
<span class="line">│   └── UserRoleMapper.java          # 用户角色关联</span>
<span class="line">├── entity/</span>
<span class="line">│   ├── User.java                    # 用户实体</span>
<span class="line">│   ├── Role.java                    # 角色实体</span>
<span class="line">│   └── UserRole.java                # 用户角色关联实体</span>
<span class="line">├── dto/</span>
<span class="line">│   ├── LoginDTO.java                # 登录请求</span>
<span class="line">│   ├── RegisterDTO.java             # 注册请求</span>
<span class="line">│   └── ChangePasswordDTO.java       # 修改密码请求</span>
<span class="line">└── vo/</span>
<span class="line">    ├── LoginVO.java                 # 登录响应</span>
<span class="line">    └── UserProfileVO.java           # 用户信息响应</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><h2 id="_2-spring-security-核心机制" tabindex="-1"><a class="header-anchor" href="#_2-spring-security-核心机制"><span>2. Spring Security 核心机制</span></a></h2><h3 id="🔒-spring-security-是什么" tabindex="-1"><a class="header-anchor" href="#🔒-spring-security-是什么"><span>🔒 <strong>Spring Security 是什么？</strong></span></a></h3><p>Spring Security 是一个强大的认证和授权框架，提供：</p><ul><li>✅ 用户认证（Authentication）- &quot;你是谁？&quot;</li><li>✅ 用户授权（Authorization）- &quot;你能做什么？&quot;</li><li>✅ 防护常见攻击（CSRF、XSS、Session Fixation）</li></ul><h3 id="🎯-核心组件解析" tabindex="-1"><a class="header-anchor" href="#🎯-核心组件解析"><span>🎯 <strong>核心组件解析</strong></span></a></h3><h4 id="_1-securityfilterchain-安全过滤器链" tabindex="-1"><a class="header-anchor" href="#_1-securityfilterchain-安全过滤器链"><span><strong>1. SecurityFilterChain - 安全过滤器链</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">SecurityFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    http</span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token class-name">AbstractHttpConfigurer</span><span class="token operator">::</span><span class="token function">disable</span><span class="token punctuation">)</span>  <span class="token comment">// ① 禁用 CSRF</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span>session <span class="token operator">-&gt;</span>            <span class="token comment">// ② 无状态会话</span></span>
<span class="line">            session<span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span><span class="token class-name">SessionCreationPolicy</span><span class="token punctuation">.</span><span class="token constant">STATELESS</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">authorizeHttpRequests</span><span class="token punctuation">(</span>auth <span class="token operator">-&gt;</span> auth      <span class="token comment">// ③ 访问控制</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">requestMatchers</span><span class="token punctuation">(</span><span class="token string">&quot;/auth/login&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>jwtFilter<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// ④ 添加自定义过滤器</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>工作原理：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">HTTP 请求</span>
<span class="line">    ↓</span>
<span class="line">① CSRF 防护过滤器 (已禁用)</span>
<span class="line">    ↓</span>
<span class="line">② Session 管理过滤器 (无状态)</span>
<span class="line">    ↓</span>
<span class="line">③ JWT 认证过滤器 (我们自定义的) ⭐</span>
<span class="line">    ↓</span>
<span class="line">④ 授权过滤器 (检查权限)</span>
<span class="line">    ↓</span>
<span class="line">⑤ Controller 处理请求</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-authenticationmanager-认证管理器" tabindex="-1"><a class="header-anchor" href="#_2-authenticationmanager-认证管理器"><span><strong>2. AuthenticationManager - 认证管理器</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">AuthenticationManager</span> <span class="token function">authenticationManager</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token class-name">AuthenticationConfiguration</span> config<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> config<span class="token punctuation">.</span><span class="token function">getAuthenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>作用：</strong> 负责验证用户凭证（用户名 + 密码）</p><p><strong>工作流程：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">用户提交登录表单</span>
<span class="line">    ↓</span>
<span class="line">创建 UsernamePasswordAuthenticationToken</span>
<span class="line">    ↓</span>
<span class="line">AuthenticationManager.authenticate()</span>
<span class="line">    ↓</span>
<span class="line">调用 AuthenticationProvider</span>
<span class="line">    ↓</span>
<span class="line">使用 UserDetailsService 加载用户</span>
<span class="line">    ↓</span>
<span class="line">使用 PasswordEncoder 验证密码</span>
<span class="line">    ↓</span>
<span class="line">返回 Authentication 对象（包含用户信息和权限）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-authenticationprovider-认证提供者" tabindex="-1"><a class="header-anchor" href="#_3-authenticationprovider-认证提供者"><span><strong>3. AuthenticationProvider - 认证提供者</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">AuthenticationProvider</span> <span class="token function">authenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">DaoAuthenticationProvider</span> provider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DaoAuthenticationProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    provider<span class="token punctuation">.</span><span class="token function">setUserDetailsService</span><span class="token punctuation">(</span>userDetailsService<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ⭐ 如何加载用户</span></span>
<span class="line">    provider<span class="token punctuation">.</span><span class="token function">setPasswordEncoder</span><span class="token punctuation">(</span><span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// ⭐ 如何验证密码</span></span>
<span class="line">    <span class="token keyword">return</span> provider<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键配置：</strong></p><ul><li><code>UserDetailsService</code> - 从数据库加载用户</li><li><code>PasswordEncoder</code> - BCrypt 密码验证器</li></ul><h4 id="_4-userdetailsservice-用户加载服务" tabindex="-1"><a class="header-anchor" href="#_4-userdetailsservice-用户加载服务"><span><strong>4. UserDetailsService - 用户加载服务</strong></span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDetailsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">UserDetails</span> <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// ① 从数据库查询用户</span></span>
<span class="line">        <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UsernameNotFoundException</span><span class="token punctuation">(</span><span class="token string">&quot;User not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// ② 查询用户权限</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> permissions <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectPermissionsByUserId</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// ③ 返回 Spring Security 需要的 UserDetails 对象</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SecurityUser</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> permissions<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>SecurityUser - 自定义 UserDetails 实现：</strong></p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityUser</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetails</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> userId<span class="token punctuation">;</span>              <span class="token comment">// 用户ID（额外信息）</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>          <span class="token comment">// 用户名</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>          <span class="token comment">// 密码（加密后的）</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> enabled<span class="token punctuation">;</span>          <span class="token comment">// 是否启用</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorities<span class="token punctuation">;</span>  <span class="token comment">// 权限列表</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> authorities<span class="token punctuation">;</span>  <span class="token comment">// ⭐ Spring Security 用这个判断权限</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> password<span class="token punctuation">;</span>  <span class="token comment">// ⭐ Spring Security 用这个验证密码</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> enabled<span class="token punctuation">;</span>  <span class="token comment">// ⭐ 账号是否可用</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_5-passwordencoder-密码加密器" tabindex="-1"><a class="header-anchor" href="#_5-passwordencoder-密码加密器"><span><strong>5. PasswordEncoder - 密码加密器</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Bean</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token class-name">PasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 使用 BCrypt 算法</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>BCrypt 特点：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;Admin@123&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 注册时：加密密码</span></span>
<span class="line"><span class="token class-name">String</span> hash1 <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 结果: $2a$10$N.zmdr9k7uOCQb376NoUn...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 同样的密码再次加密，结果不同！（自动加盐）</span></span>
<span class="line"><span class="token class-name">String</span> hash2 <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 结果: $2a$10$K.abcd1234567890XYZ...</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 登录时：验证密码</span></span>
<span class="line"><span class="token keyword">boolean</span> isMatch <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> hash1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span></span>
<span class="line"><span class="token keyword">boolean</span> isMatch2 <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> hash2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>为什么同一个密码每次加密结果都不同？</strong></p><ul><li>BCrypt 自动生成随机盐（Salt）</li><li>盐值存储在密文中（<code>$2a$10$</code> 后面的部分）</li><li>验证时自动提取盐值，重新计算比对</li></ul><hr><h2 id="_3-jwt-认证流程" tabindex="-1"><a class="header-anchor" href="#_3-jwt-认证流程"><span>3. JWT 认证流程</span></a></h2><h3 id="🎫-jwt-json-web-token-是什么" tabindex="-1"><a class="header-anchor" href="#🎫-jwt-json-web-token-是什么"><span>🎫 <strong>JWT (JSON Web Token) 是什么？</strong></span></a></h3><p>JWT 是一种无状态的认证方式，不需要服务器存储 Session。</p><p><strong>JWT 结构：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbiIsImV4cCI6MTY0MDk5OTk5OX0.signature</span>
<span class="line"></span>
<span class="line">│                                     │                                  │</span>
<span class="line">└──────────── Header ────────────────┴──────────── Payload ────────────┴── Signature</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>三部分组成：</strong></p><ol><li><p><strong>Header</strong> - 算法类型</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;alg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;HS256&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;typ&quot;</span><span class="token operator">:</span> <span class="token string">&quot;JWT&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Payload</strong> - 用户数据</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;sub&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>        <span class="token comment">// 用户名</span></span>
<span class="line">  <span class="token property">&quot;exp&quot;</span><span class="token operator">:</span> <span class="token number">1640999999</span><span class="token punctuation">,</span>     <span class="token comment">// 过期时间</span></span>
<span class="line">  <span class="token property">&quot;iat&quot;</span><span class="token operator">:</span> <span class="token number">1640900000</span>      <span class="token comment">// 签发时间</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>Signature</strong> - 签名（防篡改）</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">HMACSHA256(</span>
<span class="line">  base64UrlEncode(header) + &quot;.&quot; + base64UrlEncode(payload),</span>
<span class="line">  secret_key</span>
<span class="line">)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="🔧-jwtutil-jwt-工具类" tabindex="-1"><a class="header-anchor" href="#🔧-jwtutil-jwt-工具类"><span>🔧 <strong>JwtUtil - JWT 工具类</strong></span></a></h3><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtUtil</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">JwtProperties</span> jwtProperties<span class="token punctuation">;</span>  <span class="token comment">// 读取配置</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ① 生成 Token</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">generateToken</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Date</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">Date</span> expiration <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> jwtProperties<span class="token punctuation">.</span><span class="token function">getExpiration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// 设置用户名</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setIssuedAt</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>                           <span class="token comment">// 签发时间</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">setExpiration</span><span class="token punctuation">(</span>expiration<span class="token punctuation">)</span>                  <span class="token comment">// 过期时间</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">signWith</span><span class="token punctuation">(</span><span class="token function">getSigningKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SignatureAlgorithm</span><span class="token punctuation">.</span><span class="token constant">HS256</span><span class="token punctuation">)</span>  <span class="token comment">// 签名</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ② 验证 Token</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">validateToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">,</span> <span class="token class-name">UserDetails</span> userDetails<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token function">extractUsername</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span>username<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isTokenExpired</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ③ 提取用户名</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">extractUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">extractClaim</span><span class="token punctuation">(</span>token<span class="token punctuation">,</span> <span class="token class-name">Claims</span><span class="token operator">::</span><span class="token function">getSubject</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ④ 检查是否过期</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Boolean</span> <span class="token function">isTokenExpired</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token function">extractExpiration</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取签名密钥</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">SecretKey</span> <span class="token function">getSigningKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> keyBytes <span class="token operator">=</span> jwtProperties<span class="token punctuation">.</span><span class="token function">getSecret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token class-name">StandardCharsets</span><span class="token punctuation">.</span><span class="token constant">UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Keys</span><span class="token punctuation">.</span><span class="token function">hmacShaKeyFor</span><span class="token punctuation">(</span>keyBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>配置文件：</strong></p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code class="language-yaml"><span class="line"><span class="token key atrule">jwt</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">secret</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>256<span class="token punctuation">-</span>bit<span class="token punctuation">-</span>secret<span class="token punctuation">-</span>key<span class="token punctuation">-</span>change<span class="token punctuation">-</span>this<span class="token punctuation">-</span>in<span class="token punctuation">-</span>production  <span class="token comment"># 密钥（至少256位）</span></span>
<span class="line">  <span class="token key atrule">expiration</span><span class="token punctuation">:</span> <span class="token number">604800000</span>  <span class="token comment"># 过期时间：7天（毫秒）</span></span>
<span class="line">  <span class="token key atrule">header</span><span class="token punctuation">:</span> Authorization  <span class="token comment"># HTTP Header 名称</span></span>
<span class="line">  <span class="token key atrule">prefix</span><span class="token punctuation">:</span> Bearer         <span class="token comment"># Token 前缀</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🛡️-jwtauthenticationfilter-jwt-过滤器" tabindex="-1"><a class="header-anchor" href="#🛡️-jwtauthenticationfilter-jwt-过滤器"><span>🛡️ <strong>JwtAuthenticationFilter - JWT 过滤器</strong></span></a></h3><p>这是整个认证机制的核心！</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtAuthenticationFilter</span> <span class="token keyword">extends</span> <span class="token class-name">OncePerRequestFilter</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">JwtUtil</span> jwtUtil<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserDetailsService</span> userDetailsService<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span></span>
<span class="line">                                    <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span></span>
<span class="line">                                    <span class="token class-name">FilterChain</span> filterChain<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// ① 从请求头提取 JWT Token</span></span>
<span class="line">        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token function">extractTokenFromRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> jwtUtil<span class="token punctuation">.</span><span class="token function">validateToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ② 从 Token 提取用户名</span></span>
<span class="line">            <span class="token class-name">String</span> username <span class="token operator">=</span> jwtUtil<span class="token punctuation">.</span><span class="token function">extractUsername</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ③ 加载用户详情</span></span>
<span class="line">            <span class="token class-name">UserDetails</span> userDetails <span class="token operator">=</span> userDetailsService<span class="token punctuation">.</span><span class="token function">loadUserByUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ④ 创建认证对象</span></span>
<span class="line">            <span class="token class-name">UsernamePasswordAuthenticationToken</span> authentication <span class="token operator">=</span></span>
<span class="line">                <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span></span>
<span class="line">                    userDetails<span class="token punctuation">,</span>              <span class="token comment">// principal（主体）</span></span>
<span class="line">                    <span class="token keyword">null</span><span class="token punctuation">,</span>                     <span class="token comment">// credentials（凭证，不需要）</span></span>
<span class="line">                    userDetails<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// authorities（权限）</span></span>
<span class="line">                <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑤ 设置到 SecurityContext（Spring Security 的上下文）</span></span>
<span class="line">            <span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// ⑥ 继续过滤器链</span></span>
<span class="line">        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 从 HTTP Header 提取 Token</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">extractTokenFromRequest</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> bearerToken <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>bearerToken <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> bearerToken<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;Bearer &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> bearerToken<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 去掉 &quot;Bearer &quot; 前缀</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>工作流程图：</strong></p><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" style="--vp-collapsed-lines:15;"><pre><code class="language-text"><span class="line">HTTP 请求</span>
<span class="line">    ↓</span>
<span class="line">检查 Authorization Header</span>
<span class="line">    ↓</span>
<span class="line">提取 JWT Token</span>
<span class="line">    ↓</span>
<span class="line">验证 Token 有效性</span>
<span class="line">    ├─ 无效 → 继续（不设置认证）</span>
<span class="line">    └─ 有效 ↓</span>
<span class="line">        提取用户名</span>
<span class="line">        ↓</span>
<span class="line">        加载用户信息（UserDetailsService）</span>
<span class="line">        ↓</span>
<span class="line">        创建 Authentication 对象</span>
<span class="line">        ↓</span>
<span class="line">        存入 SecurityContext</span>
<span class="line">        ↓</span>
<span class="line">        后续 Controller 可通过 SecurityUtil 获取当前用户</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><h2 id="_4-mybatis-plus-数据层" tabindex="-1"><a class="header-anchor" href="#_4-mybatis-plus-数据层"><span>4. MyBatis-Plus 数据层</span></a></h2><h3 id="🗄️-mybatis-plus-是什么" tabindex="-1"><a class="header-anchor" href="#🗄️-mybatis-plus-是什么"><span>🗄️ <strong>MyBatis-Plus 是什么？</strong></span></a></h3><p>MyBatis-Plus 是 MyBatis 的增强工具，提供：</p><ul><li>✅ <strong>CRUD 接口</strong>：继承 <code>BaseMapper</code> 即可使用</li><li>✅ <strong>条件构造器</strong>：类型安全的 SQL 构建</li><li>✅ <strong>分页插件</strong>：自动分页</li><li>✅ <strong>代码生成器</strong>：自动生成 Entity、Mapper</li></ul><h3 id="📝-usermapper-用户数据访问" tabindex="-1"><a class="header-anchor" href="#📝-usermapper-用户数据访问"><span>📝 <strong>UserMapper - 用户数据访问</strong></span></a></h3><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Mapper</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ========== MyBatis-Plus 内置方法（无需实现）==========</span></span>
<span class="line">    <span class="token comment">// insert(User user)              - 插入</span></span>
<span class="line">    <span class="token comment">// deleteById(Long id)            - 删除</span></span>
<span class="line">    <span class="token comment">// updateById(User user)          - 更新</span></span>
<span class="line">    <span class="token comment">// selectById(Long id)            - 查询单个</span></span>
<span class="line">    <span class="token comment">// selectList(Wrapper&lt;User&gt;)      - 查询列表</span></span>
<span class="line">    <span class="token comment">// selectPage(Page, Wrapper)      - 分页查询</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ========== 自定义方法 ==========</span></span>
<span class="line">    </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 检查用户名是否存在</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT COUNT(*) &gt; 0 FROM users WHERE username = #{username}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">boolean</span> <span class="token function">existsByUsername</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 检查邮箱是否存在</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;SELECT COUNT(*) &gt; 0 FROM users WHERE email = #{email}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">boolean</span> <span class="token function">existsByEmail</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询用户权限</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        SELECT DISTINCT p.code</span>
<span class="line">        FROM permissions p</span>
<span class="line">        INNER JOIN role_permissions rp ON p.id = rp.permission_id</span>
<span class="line">        INNER JOIN user_roles ur ON rp.role_id = ur.role_id</span>
<span class="line">        WHERE ur.user_id = #{userId}</span>
<span class="line">    &quot;&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectPermissionsByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token doc-comment comment">/**</span>
<span class="line">     * 查询用户角色</span>
<span class="line">     */</span></span>
<span class="line">    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;</span>
<span class="line">        SELECT DISTINCT r.code</span>
<span class="line">        FROM roles r</span>
<span class="line">        INNER JOIN user_roles ur ON r.id = ur.role_id</span>
<span class="line">        WHERE ur.user_id = #{userId}</span>
<span class="line">    &quot;&quot;&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectRolesByUserId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Long</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="🔍-lambdaquerywrapper-类型安全的查询构造器" tabindex="-1"><a class="header-anchor" href="#🔍-lambdaquerywrapper-类型安全的查询构造器"><span>🔍 <strong>LambdaQueryWrapper - 类型安全的查询构造器</strong></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// ❌ 传统 MyBatis 写法（字符串，容易出错）</span></span>
<span class="line"><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;SELECT * FROM users WHERE username = ?&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ✅ MyBatis-Plus 写法（类型安全）</span></span>
<span class="line"><span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// WHERE username = &#39;admin&#39;</span></span>
<span class="line"><span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>更多示例：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// 查询状态为1的用户</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 模糊查询</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// username LIKE &#39;%admin%&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 多条件</span></span>
<span class="line">wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getStatus</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">       <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUsername</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">       <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getCreatedAt</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 分页查询</span></span>
<span class="line"><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 第1页，每页10条</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🏗️-baseentity-实体基类" tabindex="-1"><a class="header-anchor" href="#🏗️-baseentity-实体基类"><span>🏗️ <strong>BaseEntity - 实体基类</strong></span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Data</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">BaseEntity</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>  <span class="token comment">// 主键，自增</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;created_at&quot;</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createdAt<span class="token punctuation">;</span>  <span class="token comment">// 创建时间，插入时自动填充</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@TableField</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;updated_at&quot;</span><span class="token punctuation">,</span> fill <span class="token operator">=</span> <span class="token class-name">FieldFill</span><span class="token punctuation">.</span><span class="token constant">INSERT_UPDATE</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> updatedAt<span class="token punctuation">;</span>  <span class="token comment">// 更新时间，插入和更新时自动填充</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>自动填充处理器：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Component</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyMetaObjectHandler</span> <span class="token keyword">implements</span> <span class="token class-name">MetaObjectHandler</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictInsertFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;createdAt&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictInsertFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;updatedAt&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFill</span><span class="token punctuation">(</span><span class="token class-name">MetaObject</span> metaObject<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">strictUpdateFill</span><span class="token punctuation">(</span>metaObject<span class="token punctuation">,</span> <span class="token string">&quot;updatedAt&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_5-服务层业务逻辑" tabindex="-1"><a class="header-anchor" href="#_5-服务层业务逻辑"><span>5. 服务层业务逻辑</span></a></h2><h3 id="🔐-authservice-认证服务" tabindex="-1"><a class="header-anchor" href="#🔐-authservice-认证服务"><span>🔐 <strong>AuthService - 认证服务</strong></span></a></h3><h4 id="登录流程实现" tabindex="-1"><a class="header-anchor" href="#登录流程实现"><span><strong>登录流程实现</strong></span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AuthServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">AuthService</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">AuthenticationManager</span> authenticationManager<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">JwtUtil</span> jwtUtil<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token annotation punctuation">@Override</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token class-name">LoginVO</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">LoginDTO</span> loginDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// ① 检查登录尝试次数（防暴力破解）</span></span>
<span class="line">        <span class="token function">checkLoginAttempts</span><span class="token punctuation">(</span>loginDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// ② 创建认证令牌</span></span>
<span class="line">            <span class="token class-name">UsernamePasswordAuthenticationToken</span> authToken <span class="token operator">=</span></span>
<span class="line">                <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span></span>
<span class="line">                    loginDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    loginDTO<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">// 原始密码（明文）</span></span>
<span class="line">                <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ③ 执行认证（Spring Security 自动验证密码）</span></span>
<span class="line">            <span class="token class-name">Authentication</span> authentication <span class="token operator">=</span> authenticationManager<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authToken<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ④ 认证成功，重置登录尝试</span></span>
<span class="line">            <span class="token function">resetLoginAttempts</span><span class="token punctuation">(</span>loginDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑤ 获取认证后的用户信息</span></span>
<span class="line">            <span class="token class-name">SecurityUser</span> securityUser <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">SecurityUser</span><span class="token punctuation">)</span> authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑥ 生成 JWT Token</span></span>
<span class="line">            <span class="token class-name">String</span> token <span class="token operator">=</span> jwtUtil<span class="token punctuation">.</span><span class="token function">generateToken</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑦ 更新最后登录时间</span></span>
<span class="line">            <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            user<span class="token punctuation">.</span><span class="token function">setLastLoginAt</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            userMapper<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑧ 查询用户角色和权限</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> roles <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectRolesByUserId</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> permissions <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectPermissionsByUserId</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// ⑨ 构建返回结果</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token class-name">LoginVO</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">token</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">tokenType</span><span class="token punctuation">(</span><span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">expiresAt</span><span class="token punctuation">(</span><span class="token function">calculateExpirationTime</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">userInfo</span><span class="token punctuation">(</span><span class="token class-name">LoginVO<span class="token punctuation">.</span>UserInfo</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">username</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">nickname</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">avatarUrl</span><span class="token punctuation">(</span>securityUser<span class="token punctuation">.</span><span class="token function">getAvatarUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">roles</span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">permissions</span><span class="token punctuation">(</span>permissions<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                </span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// ⑩ 认证失败，增加失败次数</span></span>
<span class="line">            <span class="token function">incrementLoginAttempts</span><span class="token punctuation">(</span>loginDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span><span class="token constant">INVALID_CREDENTIALS</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="注册流程实现" tabindex="-1"><a class="header-anchor" href="#注册流程实现"><span><strong>注册流程实现</strong></span></a></h4><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">RegisterDTO</span> registerDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ① 检查用户名是否已存在</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>userMapper<span class="token punctuation">.</span><span class="token function">existsByUsername</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span><span class="token constant">USER_ALREADY_EXISTS</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token string">&quot;Username already exists&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ② 检查邮箱是否已注册</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>userMapper<span class="token punctuation">.</span><span class="token function">existsByEmail</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span><span class="token constant">USER_ALREADY_EXISTS</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token string">&quot;Email already registered&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ③ 创建用户对象</span></span>
<span class="line">    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> </span>
<span class="line">        registerDTO<span class="token punctuation">.</span><span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> registerDTO<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ④ 加密密码（BCrypt）</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>registerDTO<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ⑤ 设置默认值</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">USER_STATUS_ACTIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setEmailVerified</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setPostCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setFollowerCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    user<span class="token punctuation">.</span><span class="token function">setFollowingCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ⑥ 保存到数据库</span></span>
<span class="line">    userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ⑦ 分配默认角色（READER）</span></span>
<span class="line">    <span class="token function">assignDefaultRole</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;User registered successfully: {}&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">assignDefaultRole</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Role</span> readerRole <span class="token operator">=</span> roleMapper<span class="token punctuation">.</span><span class="token function">selectByCode</span><span class="token punctuation">(</span><span class="token string">&quot;ROLE_READER&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>readerRole <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">UserRole</span> userRole <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        userRole<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        userRole<span class="token punctuation">.</span><span class="token function">setRoleId</span><span class="token punctuation">(</span>readerRole<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        userRoleMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>userRole<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><hr><h2 id="_6-安全特性详解" tabindex="-1"><a class="header-anchor" href="#_6-安全特性详解"><span>6. 安全特性详解</span></a></h2><h3 id="🛡️-防暴力破解-登录限制" tabindex="-1"><a class="header-anchor" href="#🛡️-防暴力破解-登录限制"><span>🛡️ <strong>防暴力破解 - 登录限制</strong></span></a></h3><p>使用 Redis 记录登录失败次数：</p><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">checkLoginAttempts</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> lockKey <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">KEY_LOGIN_LOCKED</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> attemptsKey <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">KEY_LOGIN_ATTEMPTS</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ① 检查是否被锁定</span></span>
<span class="line">    <span class="token class-name">Boolean</span> isLocked <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>isLocked<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Long</span> ttl <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">getExpire</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span><span class="token constant">FORBIDDEN</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token string">&quot;Account locked. Try again in &quot;</span> <span class="token operator">+</span> ttl <span class="token operator">+</span> <span class="token string">&quot; minutes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// ② 检查失败次数</span></span>
<span class="line">    <span class="token class-name">Integer</span> attempts <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>attemptsKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>attempts <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> attempts <span class="token operator">&gt;=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 锁定账户30分钟</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>attemptsKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span><span class="token constant">FORBIDDEN</span><span class="token punctuation">,</span> </span>
<span class="line">            <span class="token string">&quot;Account locked due to too many failed attempts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">incrementLoginAttempts</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">KEY_LOGIN_ATTEMPTS</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">expire</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 15分钟后重置</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">resetLoginAttempts</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> attemptsKey <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">KEY_LOGIN_ATTEMPTS</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">String</span> lockKey <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">SystemConstants</span><span class="token punctuation">.</span><span class="token constant">KEY_LOGIN_LOCKED</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>attemptsKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>Redis 存储结构：</strong></p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">login:attempts:admin → 3         (失败次数)</span>
<span class="line">login:locked:admin → true        (锁定标记)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔐-密码安全" tabindex="-1"><a class="header-anchor" href="#🔐-密码安全"><span>🔐 <strong>密码安全</strong></span></a></h3><h4 id="注册时-加密密码" tabindex="-1"><a class="header-anchor" href="#注册时-加密密码"><span><strong>注册时：加密密码</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token class-name">String</span> rawPassword <span class="token operator">=</span> <span class="token string">&quot;Admin@123&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">String</span> encrypted <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>rawPassword<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 结果: $2a$10$N.zmdr9k7uOCQb376NoUn.eLTp5xGVJQwGHKX3lqk9JxYz3h8mK6q</span></span>
<span class="line"></span>
<span class="line">user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>encrypted<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 存储加密后的密码</span></span>
<span class="line">userMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="登录时-自动验证" tabindex="-1"><a class="header-anchor" href="#登录时-自动验证"><span><strong>登录时：自动验证</strong></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token comment">// Spring Security 会自动调用</span></span>
<span class="line"><span class="token keyword">boolean</span> matches <span class="token operator">=</span> passwordEncoder<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;Admin@123&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 用户输入的明文密码</span></span>
<span class="line">    <span class="token string">&quot;$2a$10$N.zmdr9k7uOCQb376NoUn.eLTp5xGVJQwGHKX3lqk9JxYz3h8mK6q&quot;</span>  <span class="token comment">// 数据库的密文</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 返回: true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🚫-token-黑名单-登出功能" tabindex="-1"><a class="header-anchor" href="#🚫-token-黑名单-登出功能"><span>🚫 <strong>Token 黑名单 - 登出功能</strong></span></a></h3><div class="language-java line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="java" style="--vp-collapsed-lines:15;"><pre><code class="language-java"><span class="line"><span class="token annotation punctuation">@Override</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">String</span> username <span class="token operator">=</span> jwtUtil<span class="token punctuation">.</span><span class="token function">extractUsername</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Long</span> expiration <span class="token operator">=</span> jwtUtil<span class="token punctuation">.</span><span class="token function">extractExpiration</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token class-name">Long</span> now <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 将 Token 加入黑名单，过期时间 = Token 剩余有效期</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>expiration <span class="token operator">&gt;</span> now<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;token:blacklist:&quot;</span> <span class="token operator">+</span> token<span class="token punctuation">;</span></span>
<span class="line">        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span></span>
<span class="line">            key<span class="token punctuation">,</span> </span>
<span class="line">            username<span class="token punctuation">,</span> </span>
<span class="line">            expiration <span class="token operator">-</span> now<span class="token punctuation">,</span> </span>
<span class="line">            <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MILLISECONDS</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>检查黑名单（在 JwtAuthenticationFilter 中）：</strong></p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token string">&quot;token:blacklist:&quot;</span> <span class="token operator">+</span> token<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Token 已失效</span></span>
<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_7-完整请求流程" tabindex="-1"><a class="header-anchor" href="#_7-完整请求流程"><span>7. 完整请求流程</span></a></h2><h3 id="🔄-登录请求完整流程" tabindex="-1"><a class="header-anchor" href="#🔄-登录请求完整流程"><span>🔄 <strong>登录请求完整流程</strong></span></a></h3><div class="language-text line-numbers-mode has-collapsed-lines collapsed" data-highlighter="prismjs" data-ext="text" style="--vp-collapsed-lines:15;"><pre><code class="language-text"><span class="line">前端发送登录请求</span>
<span class="line">POST /api/auth/login</span>
<span class="line">{</span>
<span class="line">  &quot;username&quot;: &quot;admin&quot;,</span>
<span class="line">  &quot;password&quot;: &quot;Admin@123&quot;</span>
<span class="line">}</span>
<span class="line">    ↓</span>
<span class="line">① Spring Security 过滤器链</span>
<span class="line">    ├─ JwtAuthenticationFilter (跳过，因为是登录接口)</span>
<span class="line">    └─ 允许访问（permitAll）</span>
<span class="line">    ↓</span>
<span class="line">② AuthController.login()</span>
<span class="line">    ↓</span>
<span class="line">③ AuthService.login()</span>
<span class="line">    ├─ 检查 Redis 登录尝试次数</span>
<span class="line">    ├─ AuthenticationManager.authenticate()</span>
<span class="line">    │   ├─ UserDetailsService.loadUserByUsername()</span>
<span class="line">    │   │   ├─ UserMapper.selectOne()  (查询数据库)</span>
<span class="line">    │   │   └─ 返回 SecurityUser</span>
<span class="line">    │   ├─ PasswordEncoder.matches()  (验证密码)</span>
<span class="line">    │   └─ 返回 Authentication 对象</span>
<span class="line">    ├─ JwtUtil.generateToken()  (生成 Token)</span>
<span class="line">    ├─ UserMapper.updateById()  (更新最后登录时间)</span>
<span class="line">    └─ 构建 LoginVO</span>
<span class="line">    ↓</span>
<span class="line">④ 返回 JSON 响应</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,99)]))}const u=s(t,[["render",l]]),r=JSON.parse('{"path":"/zh/project/Auth%20%E6%A8%A1%E5%9D%97%E5%AE%8C%E6%95%B4%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90.html","title":"🔐 Auth 模块完整技术解析","lang":"zh-CN","frontmatter":{"description":"好的！让我为你详细介绍我们已经完成的 Auth 模块的技术架构和实现原理： 🔐 Auth 模块完整技术解析 📚 目录 模块架构总览 Spring Security 核心机制 JWT 认证流程 MyBatis-Plus 数据层 服务层业务逻辑 安全特性详解 完整请求流程 1. 模块架构总览 📦 分层架构 🗂️ 文件组织结构 2. Spring S...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"🔐 Auth 模块完整技术解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-08T06:43:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GALA-Lin\\",\\"url\\":\\"https://gala-lin.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://gala-lin.github.io/zh/project/Auth%20%E6%A8%A1%E5%9D%97%E5%AE%8C%E6%95%B4%E6%8A%80%E6%9C%AF%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"22lin04"}],["meta",{"property":"og:title","content":"🔐 Auth 模块完整技术解析"}],["meta",{"property":"og:description","content":"好的！让我为你详细介绍我们已经完成的 Auth 模块的技术架构和实现原理： 🔐 Auth 模块完整技术解析 📚 目录 模块架构总览 Spring Security 核心机制 JWT 认证流程 MyBatis-Plus 数据层 服务层业务逻辑 安全特性详解 完整请求流程 1. 模块架构总览 📦 分层架构 🗂️ 文件组织结构 2. Spring S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-08T06:43:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-08T06:43:07.000Z"}]]},"git":{"createdTime":1759905787000,"updatedTime":1759905787000,"contributors":[{"name":"Linsen HU","username":"","email":"1563883475@qq.com","commits":1}]},"readingTime":{"minutes":9.53,"words":2860},"filePathRelative":"zh/project/Auth 模块完整技术解析.md","excerpt":"<p>好的！让我为你详细介绍我们已经完成的 <strong>Auth 模块</strong>的技术架构和实现原理：</p>\\n<hr>\\n<h1>🔐 Auth 模块完整技术解析</h1>\\n<h2>📚 目录</h2>\\n<ol>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#1-%E6%A8%A1%E5%9D%97%E6%9E%B6%E6%9E%84%E6%80%BB%E8%A7%88\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">模块架构总览</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#2-spring-security-%E6%A0%B8%E5%BF%83%E6%9C%BA%E5%88%B6\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Spring Security 核心机制</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#3-jwt-%E8%AE%A4%E8%AF%81%E6%B5%81%E7%A8%8B\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">JWT 认证流程</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#4-mybatis-plus-%E6%95%B0%E6%8D%AE%E5%B1%82\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">MyBatis-Plus 数据层</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#5-%E6%9C%8D%E5%8A%A1%E5%B1%82%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">服务层业务逻辑</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#6-%E5%AE%89%E5%85%A8%E7%89%B9%E6%80%A7%E8%AF%A6%E8%A7%A3\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">安全特性详解</a></li>\\n<li><a href=\\"https://claude.ai/chat/16a4c146-a269-41c4-8385-2b4e4a0a9d5d#7-%E5%AE%8C%E6%95%B4%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">完整请求流程</a></li>\\n</ol>","autoDesc":true}');export{u as comp,r as data};
