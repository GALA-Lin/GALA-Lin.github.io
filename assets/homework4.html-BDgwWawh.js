import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,e as s,o as a}from"./app-DAbUoz87.js";const n={};function l(h,t){return a(),e("div",null,t[0]||(t[0]=[s(`<h1 id="homework4" tabindex="-1"><a class="header-anchor" href="#homework4"><span>Homework4</span></a></h1><h1 id="一、01-backpack-problem" tabindex="-1"><a class="header-anchor" href="#一、01-backpack-problem"><span>一、01 backpack problem</span></a></h1><p>Given:</p><ul><li>Value array <code>v = {8, 10, 6, 3, 7, 2}</code></li><li>Weight array <code>w = {4, 6, 2, 2, 5, 1}</code></li><li>Knapsack capacity <code>c = 12</code></li></ul><h2 id="solution-analysis" tabindex="-1"><a class="header-anchor" href="#solution-analysis"><span>Solution analysis</span></a></h2><h3 id="_1-two-dimensional-dp" tabindex="-1"><a class="header-anchor" href="#_1-two-dimensional-dp"><span>1. Two-dimensional DP</span></a></h3><p>m[i,j] : The largest value in the set of values with volume &lt;=j from the first i items</p><ul><li>if <code>j &lt; w[i-1]</code>：<code>m[i,j] = m[i-1,j]</code></li><li>else：<code>m[i,j] = max(m[i-1,j], m[i-1,j-w[i-1]] + v[i-1])</code></li></ul><h4 id="_1-1-dynamic-programming-table-m-i-j-construction" tabindex="-1"><a class="header-anchor" href="#_1-1-dynamic-programming-table-m-i-j-construction"><span>1.1 Dynamic Programming Table m[i,j] Construction</span></a></h4><p>**i=0/j=0:**m[i,j]=0</p><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td></tr></tbody></table><p><strong>i=1 (Item1, weight=4, value=8)</strong>:</p><p>​ w[0]=4,v[0]=8 →<code>if j &gt;= 4, m[1,j] = max(m[0,j], m[0,j-4]+v[0])</code><br> $$<br> \\therefore m[1,4\\rightarrow 12]=8<br> $$</p><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td></tr></tbody></table><p><strong>i=2 (Item2, weight=6, value=10)</strong>:</p><p>​ w[1]=6,v[1]=10 →<code>if j &gt;= 6,m[2,j] = max(m[1,j],m[1,j-6]+v[1])</code></p><p>​ <code>if j&lt;6 m[2,j]=m[1,j]</code></p><p>​ <br> $$<br> \\therefore m[1,4\\rightarrow 6]=8\\<br> m[2,6]=max(m[1,6]=8,m[1,6-6]+v[1]=0+10)=10\\<br> 同理：m[2,7]=max(m[1,7]=8,m[1,7-6]+v[1]=0+10)=10\\<br> ...\\<br> m[2,12]=max(m[1,12],m[1,12-6]+v[1]=8+10=18)<br> $$</p><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">2</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td></tr></tbody></table><p><strong>i=3 (Item3, weight=2, value=6)</strong>:</p><p>​ w[2]=2,v[2]=6 →<code>if j &gt;= 2,m[2,j] = max[m[2,j],m[2,j-2]+v[2])</code></p><p>​ <code>if j&lt;2 m[3,j]=m[2,j]</code><br> $$<br> \\therefore m[3,2\\rightarrow3]=m[2,2\\rightarrow3]+v[2]=0+6=6\\<br> m[3,4]=max(m[2,4]=8,m[2,4-2]+v[2]=0+6)=8\\<br> 同理：m[2,6]=max(m[2,6]=10,m[2,6-2]+v[2]=8+6)=14\\<br> m[3,8]=max(m[2,8]=10,m[2,8-2]+v[2]=10+6)=16\\<br> m[3,10]=max(m[2,10]=18,m[2,10-2]+v[2]=10+6)=18 \\<br> ...\\<br> m[3,12]=max(m[2,12],m[2,12-2]+v[2]=18+6=24)<br> $$</p><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">3</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">16</td><td style="text-align:center;">16</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td><td style="text-align:center;">24</td></tr></tbody></table><p>+++</p><blockquote><p>[!NOTE]</p><p>Since the calculation steps are similar, only the critical steps are shown below</p></blockquote><p><strong>i=4 (Item4, weight=2, value=3)</strong>:</p><ul><li><code>j=4</code>：<code>max(8, m[3,2]+3) = max(8, 6+3) = 9</code></li><li><code>j=6</code>：<code>max(14, m[3,4]+3) = max(14, 8+3) = 14</code></li><li><code>j=8</code>：<code>max(16, m[3,6]+3) = max(16, 14+3) = 17</code></li><li><code>j=10</code>：<code>max(18, m[3,8]+3) = max(18, 16+3) = 19</code></li><li><code>j=12</code>：<code>max(24, m[3,10]+3) = max(24, 18+3) = 24</code></li></ul><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">4</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">9</td><td style="text-align:center;">9</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">17</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">19</td><td style="text-align:center;">24</td></tr></tbody></table><p><strong>i=5 (Item5, weight=5, value=7)</strong>:</p><ul><li><code>j=11</code>：<code>max(19, m[4,6]+7) = max(19, 14+7) = 21</code></li><li><code>j=12</code>: <code>max(24, m[4,7]+7) = max(24, 14+7) = 24</code></li></ul><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">5</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">9</td><td style="text-align:center;">9</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">17</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">21</td><td style="text-align:center;">24</td></tr></tbody></table><p><strong>i=6 (Item6, weight=1, value=2)</strong>:</p><ul><li><code>j=1</code>：<code>max(0, m[5,0]+2) = max(0, 0+2) = 2</code></li><li><code>j=3</code>: <code>max(6, m[5,2]+2) = max(6, 6+2) = 8</code></li><li><code>j=4</code>: <code>max(9, m[5,3]+2) = max(9, 6+2) = 9</code></li><li><code>j=5</code>: <code>max(9, m[5,4]+2) = max(9, 9+2) = 11</code></li><li><code>j=7</code>: <code>max(14, m[5,6]+2) = max(14, 14+2) = 16</code></li><li><code>j=9</code>: <code>max(17, m[5,8]+2) = max(17, 17+2) = 19</code></li><li><code>j=12</code>: <code>max(14, m[5,11]+2) = max(24, 21+2) = 24</code></li></ul><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">6</td><td style="text-align:center;">0</td><td style="text-align:center;">2</td><td style="text-align:center;">6</td><td style="text-align:center;">8</td><td style="text-align:center;">9</td><td style="text-align:center;">11</td><td style="text-align:center;">14</td><td style="text-align:center;">16</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">19</td><td style="text-align:center;">21</td><td style="text-align:center;">24</td></tr></tbody></table><p><strong>m[i,j]</strong></p><table><thead><tr><th style="text-align:center;">i\\j</th><th style="text-align:center;">0</th><th style="text-align:center;">1</th><th style="text-align:center;">2</th><th style="text-align:center;">3</th><th style="text-align:center;">4</th><th style="text-align:center;">5</th><th style="text-align:center;">6</th><th style="text-align:center;">7</th><th style="text-align:center;">8</th><th style="text-align:center;">9</th><th style="text-align:center;">10</th><th style="text-align:center;">11</th><th style="text-align:center;">12</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">10</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">8</td><td style="text-align:center;">8</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">16</td><td style="text-align:center;">16</td><td style="text-align:center;">18</td><td style="text-align:center;">18</td><td style="text-align:center;">24</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">9</td><td style="text-align:center;">9</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">17</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">19</td><td style="text-align:center;">24</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">0</td><td style="text-align:center;">0</td><td style="text-align:center;">6</td><td style="text-align:center;">6</td><td style="text-align:center;">9</td><td style="text-align:center;">9</td><td style="text-align:center;">14</td><td style="text-align:center;">14</td><td style="text-align:center;">17</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">21</td><td style="text-align:center;">24</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">0</td><td style="text-align:center;">2</td><td style="text-align:center;">6</td><td style="text-align:center;">8</td><td style="text-align:center;">9</td><td style="text-align:center;">11</td><td style="text-align:center;">14</td><td style="text-align:center;">16</td><td style="text-align:center;">17</td><td style="text-align:center;">19</td><td style="text-align:center;">19</td><td style="text-align:center;">21</td><td style="text-align:center;">24</td></tr></tbody></table><h4 id="_1-2-code" tabindex="-1"><a class="header-anchor" href="#_1-2-code"><span>1. 2 code</span></a></h4><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;algorithm&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> namespace</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n, m;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 二维DP</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cin </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> m;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        cin </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> m; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i][j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][j];</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // f[i][j]表示前i件物品恰好装入容量为j的背包可以获得的最大价值</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">            if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i])</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">                f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i][j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i][j], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">][j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // f[i][j]表示前i件物品恰好装入容量为j的背包可以获得的最大价值</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 状态转移方程：如果不放第i件物品，则f[i][j]等于f[i-1][j]；如果放第i件物品，则f[i][j]等于max(f[i][j],f[i-1][j-v[i]]+w[i])</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // 输出DP矩阵</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> m; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i][j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> f</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[n][m] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-3-backtracking-to-find-the-optimal-combination" tabindex="-1"><a class="header-anchor" href="#_1-3-backtracking-to-find-the-optimal-combination"><span>1.3 Backtracking to find the optimal combination</span></a></h4><ul><li>Retrospectively find the optimal combination <ol><li><p><strong>Starting Point</strong>: <code>i=6</code>, <code>j=12</code></p></li><li><p>Compare &amp; Backtrack:</p><ul><li><code>m[6,12] = 24 == m[5,12] = 24</code> → <strong>Unselected item 6</strong></li><li><code>m[5,12] = 24 == m[4,12] = 24</code> → <strong>Unselected item 5</strong></li><li><code>m[4,12] = 24 == m[3,12] = 24</code> → <strong>Unselected item 4</strong></li><li><code>m[3,12] = 24 &gt; m[2,12] = 18</code>→ <strong>Selected item 3</strong>, remaining capacity <code>12-2=10</code></li><li><code>m[2,10] = 18 &gt; m[1,10] = 8</code> → <strong>Selected item 2</strong>, remaining capacity <code>10-6=4</code></li><li><code>m[1,4] = 8 &gt; m[0,4] = 0</code> → <strong>Selected item 1</strong>, remaining capacity <code>4-4=0</code></li></ul></li><li><p><strong>End Result</strong>:</p><ul><li><p><strong>Selected Items</strong>: Item 1、2、3</p></li><li><p><strong>Total Weight</strong>: <code>4 + 6 + 2 = 12</code></p></li><li><p>Total Value: <code>8 + 10 + 6 = 24</code></p></li></ul></li></ol></li></ul><p>+++</p><h3 id="_2-one-dimensional-dp" tabindex="-1"><a class="header-anchor" href="#_2-one-dimensional-dp"><span>2. One-dimensional DP</span></a></h3><h4 id="_2-1-why-is-it-deformed-like-this" tabindex="-1"><a class="header-anchor" href="#_2-1-why-is-it-deformed-like-this"><span>2.1 Why is it deformed like this?</span></a></h4><p>The states we define m[i,j] can be used to get arbitrary legal optimal solutions for i and j, but when we only need the final state m[n,m], we only need one-dimensional space to update the state.</p><h4 id="_2-2-definition-of-state-f-j" tabindex="-1"><a class="header-anchor" href="#_2-2-definition-of-state-f-j"><span>2.2 Definition of state <code>f[j]</code></span></a></h4><p><code>f[j]</code>:N items, the optimal solution under the backpack capacity <code>j</code>.</p><h4 id="_2-3-why-does-it-take-to-enumerate-backpack-capacity-in-one-dimension-in-reverse-order" tabindex="-1"><a class="header-anchor" href="#_2-3-why-does-it-take-to-enumerate-backpack-capacity-in-one-dimension-in-reverse-order"><span>2.3 Why does it take to enumerate backpack capacity in one dimension in reverse order?</span></a></h4><p>In the two-dimensional case, the states <code>f[i][j]</code> are derived from the states of the previous round <code>i-1</code>, and <code>f[i][j]</code> and <code>f[i-1][j]</code> are independent. After optimizing to one dimension, if we are still in normal order, if f <code>[smaller volume]</code> is updated to <code>f [larger volume],</code> it is possible that the state of the <code>i-1</code> round should be used instead of the state of the i-1 round.</p><h4 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>code</span></a></h4><div class="language-cpp line-numbers-mode" data-highlighter="shiki" data-ext="cpp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cpp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//一维DP</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;iostream&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#include</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &lt;algorithm&gt;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">using</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> namespace</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> std</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">#define</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> MAX</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) (a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> N, V;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cin </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> N </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> V;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    int</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">};</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 初始化state数组为0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> N; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        cin </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> N; i</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> V; j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&gt;=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]; j</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">--</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">            state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">=</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> max</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j], </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[j </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">-</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> v</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">+</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> w</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[i]);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 状态转移方程： 表示容量为j的背包可以承载的最大价值</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 如果不放第i件物品，则最大价值等于state[j]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        // 如果放第i件物品，则最大价值等于state[j - v[i]] + w[i]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    cout </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> state</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[V] </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">&lt;&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> endl;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>+++</p><h4 id="一维dp方法中文对照" tabindex="-1"><a class="header-anchor" href="#一维dp方法中文对照"><span>一维DP方法中文对照：</span></a></h4><p>将状态<code>f[i][j]</code>优化到一维<code>f[j]</code>，实际上只需要做一个等价变形。<br> 为什么可以这样变形呢？我们定义的状态<code>f[i][j]</code>可以求得任意合法的i与j最优解，但题目只需要求得最终状态<code>f[n][m]</code>，因此我们只需要一维的空间来更新状态。</p><ol><li>状态<code>f[j]</code>定义: N 件物品，背包容量 j 下的最优解。</li><li>注意枚举背包容量 j 必须从 m 开始。</li><li>为什么一维情况下枚举背包容量需要逆序？在二维情况下，状态<code>f[i][j]</code>是由上一轮<code>i - 1</code>的状态得来的，<code>f[i][j]</code>与<code>f[i - 1][j]</code>是独立的。而优化到一维后，如果我们还是正序，则有<code>f[较小体积]</code>更新到<code>f[较大体积]</code>，则有可能本应该用第<code>i-1</code>轮的状态却用的是第i轮的状态。</li><li>例如，一维状态第i轮对体积为3的物品进行决策，则<code>f[7]</code>由<code>f[4]</code>更新而来，这里的<code>f[4]</code>正确应该是<code>f[i - 1][4]</code>，但从小到大枚举j这里的<code>f[4]</code>在第 i 轮计算却变成了<code>f[i][4]</code>。当逆序枚举背包容量 j 时，我们求<code>f[7]</code>同样由<code>f[4]</code>更新，但由于是逆序，这里的<code>f[4]</code>还没有在第 i 轮计算，所以此时实际计算的<code>f[4]</code>仍然是<code>f[i - 1][4]</code>。</li><li>简单来说，一维情况正序更新状态f[j]需要用到前面计算的状态已经被「污染」，逆序则不会有这样的问题。</li></ol><p><strong>状态转移方程为：<code>f[j] = max(f[j], f[j - v[i]] + w[i]</code> 。</strong></p><h1 id="二、流水调度算法" tabindex="-1"><a class="header-anchor" href="#二、流水调度算法"><span>二、流水调度算法</span></a></h1><p>Given:<br> $$<br> n=7\\(a_0,a_1,a_2,a_3,a_4,a_5,a_6) = (5,3,6,4,8,9,6)\\(b_0\\ ,b_1,b_2,b_3,\\ b_4,b_5,\\ b_6) = (2,4,7,2,9,7,3)<br> $$</p><h2 id="约翰逊算法步骤" tabindex="-1"><a class="header-anchor" href="#约翰逊算法步骤"><span>约翰逊算法步骤</span></a></h2><h3 id="划分集合" tabindex="-1"><a class="header-anchor" href="#划分集合"><span>划分集合：</span></a></h3><p>集合A:<br> $$<br> a_i ≤ b_i:作业1（3≤4）、作业2（6≤7）、作业4（8≤9）<br> $$<br> 集合B<br> $$<br> a_i &gt; b_i：作业0（5&gt;2）、作业3（4&gt;2）、作业5（9&gt;7）、作业6（6&gt;3）<br> $$</p><h3 id="排序规则" tabindex="-1"><a class="header-anchor" href="#排序规则"><span>排序规则：</span></a></h3><p>集合A按升序排列：作业1 → 作业2 → 作业4</p><p>集合B按降序排列：作业5→ 作业6→ 作业3→ 作业0</p><h3 id="合并顺序" tabindex="-1"><a class="header-anchor" href="#合并顺序"><span>合并顺序：</span></a></h3><p>最终作业顺序：[1, 2, 4, 5, 6, 3, 0]</p><h2 id="调度甘特图" tabindex="-1"><a class="header-anchor" href="#调度甘特图"><span>调度甘特图</span></a></h2><figure><img src="https://img.picui.cn/free/2025/05/19/682b35dd68167.png" alt="4-2.png" tabindex="0" loading="lazy"><figcaption>4-2.png</figcaption></figure><h1 id="最短用时-43" tabindex="-1"><a class="header-anchor" href="#最短用时-43"><span>最短用时 43</span></a></h1>`,68)]))}const k=i(n,[["render",l]]),p=JSON.parse('{"path":"/Algorithm%20Design%20_%20Analysis%20Course%20Guide/homework4.html","title":"Homework4","lang":"en-US","frontmatter":{"icon":"pen-to-square","date":"2025-05-14T00:00:00.000Z","cover":"https://img.picui.cn/free/2025/06/15/684eb82931fbc.jpg","category":["Algo Course Guide"],"tag":["动态规划","01背包","流水调度"],"description":"Homework4 一、01 backpack problem Given: Value array v = {8, 10, 6, 3, 7, 2} Weight array w = {4, 6, 2, 2, 5, 1} Knapsack capacity c = 12 Solution analysis 1. Two-dimensional DP m...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Homework4\\",\\"image\\":[\\"https://img.picui.cn/free/2025/05/19/682b35dd68167.png\\"],\\"datePublished\\":\\"2025-05-14T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-15T13:48:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GALA-Lin\\",\\"url\\":\\"https://gala-lin.github.io\\"}]}"],["meta",{"property":"og:url","content":"https://gala-lin.github.io/Algorithm%20Design%20_%20Analysis%20Course%20Guide/homework4.html"}],["meta",{"property":"og:site_name","content":"22lin04"}],["meta",{"property":"og:title","content":"Homework4"}],["meta",{"property":"og:description","content":"Homework4 一、01 backpack problem Given: Value array v = {8, 10, 6, 3, 7, 2} Weight array w = {4, 6, 2, 2, 5, 1} Knapsack capacity c = 12 Solution analysis 1. Two-dimensional DP m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.picui.cn/free/2025/06/15/684eb82931fbc.jpg"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-15T13:48:39.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://img.picui.cn/free/2025/06/15/684eb82931fbc.jpg"}],["meta",{"name":"twitter:image:alt","content":"Homework4"}],["meta",{"property":"article:tag","content":"流水调度"}],["meta",{"property":"article:tag","content":"01背包"}],["meta",{"property":"article:tag","content":"动态规划"}],["meta",{"property":"article:published_time","content":"2025-05-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-15T13:48:39.000Z"}]]},"git":{"createdTime":1749942657000,"updatedTime":1749995319000,"contributors":[{"name":"Linsen HU","username":"","email":"1563883475@qq.com","commits":4}]},"readingTime":{"minutes":7.4,"words":2219},"filePathRelative":"Algorithm Design & Analysis Course Guide/homework4.md","excerpt":"\\n<h1>一、01 backpack problem</h1>\\n<p>Given:</p>\\n<ul>\\n<li>Value array <code>v = {8, 10, 6, 3, 7, 2}</code></li>\\n<li>Weight array <code>w = {4, 6, 2, 2, 5, 1}</code></li>\\n<li>Knapsack capacity <code>c = 12</code></li>\\n</ul>\\n<h2>Solution analysis</h2>\\n<h3>1. Two-dimensional DP</h3>\\n<p>m[i,j] : The largest value in the set of values with volume &lt;=j from the first i items</p>","autoDesc":true}');export{k as comp,p as data};
